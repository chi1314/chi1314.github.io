<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蓝幽の小屋</title>
  
  <subtitle>嗨！我是蓝幽，一名爱追求的同学</subtitle>
  <link href="https://chi1314.github.io/atom.xml" rel="self"/>
  
  <link href="https://chi1314.github.io/"/>
  <updated>2023-06-24T08:37:12.521Z</updated>
  <id>https://chi1314.github.io/</id>
  
  <author>
    <name>蓝幽呀</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>拍照技巧</title>
    <link href="https://chi1314.github.io/2023/06/24/%E6%8B%8D%E7%85%A7%E6%8A%80%E5%B7%A7/"/>
    <id>https://chi1314.github.io/2023/06/24/%E6%8B%8D%E7%85%A7%E6%8A%80%E5%B7%A7/</id>
    <published>2023-06-24T07:55:28.000Z</published>
    <updated>2023-06-24T08:37:12.521Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下雨天"><a href="#下雨天" class="headerlink" title="下雨天"></a>下雨天</h1><h3 id="1-拍雨条"><a href="#1-拍雨条" class="headerlink" title="1.拍雨条"></a>1.拍雨条</h3><p>教程上拍的<span style="margin-left:130px">现实拍的</span><br><img src="2023-6-24-1.jpg" alt="2023-1" style="zoom:17%;float:left" /><br><img src="2023-6-24-4.jpg" alt="2023-1" style="zoom:13%;float:left;margin:-200px 0px 0px 30px" /><br><br></p><h4 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h4><p>专业模式<br>ISO：160<br>s：1/200</p><h3 id="2-拍雨滴"><a href="#2-拍雨滴" class="headerlink" title="2.拍雨滴"></a>2.拍雨滴</h3><p>教程上拍的<span style="margin-left:130px">现实拍的</span><br><img src="2023-6-24-2.jpg" alt="2023-1" style="zoom:17%;float:left" /><br><img src="2023-6-24-5.jpg" alt="2023-1" style="zoom:13%;float:left;margin:-200px 0px 0px 30px" /><br><br></p><h4 id="技巧-1"><a href="#技巧-1" class="headerlink" title="技巧"></a>技巧</h4><p>专业模式<br>ISO：400<br>s：1/2000</p><h3 id="3-拍雨滴变雨条"><a href="#3-拍雨滴变雨条" class="headerlink" title="3.拍雨滴变雨条"></a>3.拍雨滴变雨条</h3><p>教程上拍的<span style="margin-left:130px">现实拍的</span><br><img src="2023-6-24-3.jpg" alt="2023-1" style="zoom:17%;float:left" /><br><img src="2023-6-24-6.jpg" alt="2023-1" style="zoom:13%;float:left;margin:-200px 0px 0px 30px" /><br><br></p><h4 id="技巧-2"><a href="#技巧-2" class="headerlink" title="技巧"></a>技巧</h4><p>专业模式<br>ISO：100<br>s：1/500</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下雨天&quot;&gt;&lt;a href=&quot;#下雨天&quot; class=&quot;headerlink&quot; title=&quot;下雨天&quot;&gt;&lt;/a&gt;下雨天&lt;/h1&gt;&lt;h3 id=&quot;1-拍雨条&quot;&gt;&lt;a href=&quot;#1-拍雨条&quot; class=&quot;headerlink&quot; title=&quot;1.拍雨条&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="photo" scheme="https://chi1314.github.io/tags/photo/"/>
    
  </entry>
  
  <entry>
    <title>武功山攻略</title>
    <link href="https://chi1314.github.io/2023/06/13/%E6%AD%A6%E5%8A%9F%E5%B1%B1%E6%94%BB%E7%95%A5/"/>
    <id>https://chi1314.github.io/2023/06/13/%E6%AD%A6%E5%8A%9F%E5%B1%B1%E6%94%BB%E7%95%A5/</id>
    <published>2023-06-13T02:54:56.000Z</published>
    <updated>2023-06-13T12:42:57.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-路线"><a href="#1-路线" class="headerlink" title="1.路线"></a>1.路线</h2><h5 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h5><p>路线：上山：游客中心-石鼓寺-中庵索道-紫极宫-右边福星谷方向徒步-二级索道-徒步金顶-欣赏日落、高山草甸-住金顶附近帐篷-欣赏日出<br>     下山：金顶-吊马桩-好汉坡-紫极宫-石谷寺-游客服务中心<br>分析：大众路线，适合旅游小白。<br>不好的地方：金顶会非常多人，比较挤，需要占位置取景，晚上行人太多，基本睡不着，基本都是在唠嗑吃零食过夜，但是我有几对超级耳塞，不知道挡的住不<br>好的地方：可以看到最好的日落日出<br>过程：看体力情况是否坐下山缆车<br>时间：上山（2缆车）2个小时 （1缆车）3-4小时（徒步）6个小时   下山（缆车-需要排长队）4个小时 （徒步）3-4小时<br>价格：索道65+35</p><h5 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h5><p>路线：上山：游客中心-石鼓寺-中庵索道-紫极宫-情人花廊方向徒步上山-金顶-日落-吊马桩-玻璃栈道-观音宕-观音宕帐篷过夜<br>下山：观音宕-吊马桩-好汉坡-徒步下山-石鼓寺<br>分析：自由路线，需要一定体力。<br>不好的地方：想去金顶看最佳日出需要提早起来从观音宕到金顶需要爬一个小时，这个时候比较晚到，需要挤一挤，不过看日出还有一些小众地点，暂且知道的地点：1.金顶西边云中雾客栈方向下去未开发的景点路，有另一个山峰，没有金顶高，但视野同样开阔，关键在于人少不挤<br>2.观音宕附近也有不错的地方，但是观日出的景点较少<br>好的地方：晚上可以好好休息睡一觉<br>过程：看情况<br>时间：<br>价格：索道65<br><img src="1.jpg" alt="2023-1" style="zoom:50%;" /></p><h5 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h5><p>路线；： 上山：游客中心-石鼓寺-中庵索道-紫极宫-徒步金顶-日落-观音宕过夜-第二天早徒步一小时回金顶看日出<br>下山：-金顶-情人画廊-紫极宫-索道-石鼓寺<br>分析：晚上能睡好一点，但是观音宕到金顶有4.5公里，会很累，<br>过程：<br>时间：</p><h5 id="方案四（终极方案）"><a href="#方案四（终极方案）" class="headerlink" title="方案四（终极方案）"></a>方案四（终极方案）</h5><p>路线：上山：游客中心-石鼓寺-中庵索道-紫极宫-情人花廊方向-徒步金顶-欣赏日落-住金顶附近帐篷-欣赏日出<br>下山：金顶-观音宕-高山草甸-吊马桩-好汉坡-徒步下山-石鼓寺<br>分析：大众路线，徒步要多一点<br>不好的地方：只有晚上休息的问题，打算用我的超级耳塞去对抗，对抗不了就加入，哈哈哈<br>好的地方：路程规划没有多走的路，所有风景都能看到最好的路线<br>过程：看情况<br>时间：<br>价格：一次索道65</p><h5 id="方案五"><a href="#方案五" class="headerlink" title="方案五"></a>方案五</h5><p>路线：东江村上去-徒步观音宕-在观音欣赏日落-住宿观音宕</p><h2 id="2-物品准备"><a href="#2-物品准备" class="headerlink" title="2.物品准备"></a>2.物品准备</h2><p>书包必备：挡风外套一件、一次性雨衣、充电器、充电宝、身份证、小水杯<br>食物：泡面、火腿肠、糖等等，去零食店购入<br>洗漱：纸巾、湿巾、一次性洗漱用品、防晒霜<br>住：耳塞<br>注：1.最最重要的还是天气，一定要天晴<br>2.至于臭虫，看当时最近的那几天是选择住金顶还是观音宕</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-路线&quot;&gt;&lt;a href=&quot;#1-路线&quot; class=&quot;headerlink&quot; title=&quot;1.路线&quot;&gt;&lt;/a&gt;1.路线&lt;/h2&gt;&lt;h5 id=&quot;方案一&quot;&gt;&lt;a href=&quot;#方案一&quot; class=&quot;headerlink&quot; title=&quot;方案一&quot;&gt;&lt;/a&gt;方案</summary>
      
    
    
    
    
    <category term="旅游" scheme="https://chi1314.github.io/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>背景轮播及预加载</title>
    <link href="https://chi1314.github.io/2023/05/29/%E8%83%8C%E6%99%AF%E8%BD%AE%E6%92%AD%E5%8F%8A%E9%A2%84%E5%8A%A0%E8%BD%BD/"/>
    <id>https://chi1314.github.io/2023/05/29/%E8%83%8C%E6%99%AF%E8%BD%AE%E6%92%AD%E5%8F%8A%E9%A2%84%E5%8A%A0%E8%BD%BD/</id>
    <published>2023-05-29T11:10:42.000Z</published>
    <updated>2023-05-29T11:39:35.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="轮播效果"><a href="#轮播效果" class="headerlink" title="轮播效果"></a>轮播效果</h3><p>开始用js写的，后面发现有点难改，还是用css动画来做了这个轮播效果：以下是我的css源代码<br> <details><br> <summary >展开查看</summary></p><pre><code class="css">#home-head &#123;   width: 100vw;   height: 100vh;   position: relative;   display: flex;   background-image: url(../image/bg6.jpg)  ;   background-repeat: no-repeat;   background-position: center;   background-size: 1440px 1020px;   background-attachment:local;   background-origin:content-box;   background-size: cover;   opacity: 1;   animation: fateimg 50s linear infinite;   z-index: -1000000;&#125;@keyframes fateimg&#123;   0%&#123;background: url(../image/bg6.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   8%&#123;background: url(../image/bg6.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   11%&#123;background: url(../image/bg2.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   20%&#123;background: url(../image/bg2.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   21%&#123;background: url(../image/bg2.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   24%&#123;background: url(../image/bg3.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   24.5%&#123;background: url(../image/bg3.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   34%&#123;background: url(../image/bg3.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   37%&#123;background: url(../image/bg4.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   37.5%&#123;background: url(../image/bg4.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   47%&#123;background: url(../image/bg4.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   50%&#123;background: url(../image/bg5.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   49.5%&#123;background: url(../image/bg5.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   60%&#123;background: url(../image/bg5.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   63%&#123;background: url(../image/bg1.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   63.5%&#123;background: url(../image/bg1.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   73%&#123;background: url(../image/bg1.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   76%&#123;background: url(../image/bg7.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   76.5%&#123;background: url(../image/bg7.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   86%&#123;background: url(../image/bg7.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   89%&#123;background: url(../image/bg8.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   89.5%&#123;background: url(../image/bg8.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   98%&#123;background: url(../image/bg8.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125;   100%&#123;background: url(../image/bg6.jpg);opacity: 1;background-repeat: no-repeat;background-size:cover ;&#125; &#125;</code></pre></details> 完成以上配置可以基本开始轮播了，但是还有缺陷，就是每次切换图片时才开始加载，导致图片还未加载出来，动画就已经开始了，有时是会闪一下开始切换，这都是没有加载完全的问题<h3 id="2-问题解决"><a href="#2-问题解决" class="headerlink" title="2.问题解决"></a>2.问题解决</h3><h5 id="js解决："><a href="#js解决：" class="headerlink" title="js解决："></a>js解决：</h5><details><summary>展开查看</summary><pre><code class="js">const imagePaths = [    &#39;../image/bg1.jpg&#39;,    &#39;../image/bg2.jpg&#39;,    &#39;../image/bg3.jpg&#39;,    &#39;../image/bg4.jpg&#39;,    &#39;../image/bg5.jpg&#39;,    &#39;../image/bg6.jpg&#39;,    &#39;../image/bg7.jpg&#39;,    &#39;../image/bg8.jpg&#39;  ];  const loadImages = (imagePaths) =&gt; &#123;    const promises = [];      for (let i = 0; i &lt; imagePaths.length; i++) &#123;      const promise = new Promise((resolve, reject) =&gt; &#123;        const image = new Image();        image.onload = resolve;        image.onerror = reject;        image.src = imagePaths[i];      &#125;);        promises.push(promise);    &#125;        return Promise.all(promises);  &#125;;    loadImages(imagePaths).then(() =&gt; &#123;      sliderBg=document.getElementById(&#39;home-head&#39;)      sliderBg.style.animation=&quot;fateimg 50s linear infinite&quot;;      //使用这条js需要把css中animation属性删除    // 所有图片已经预加载完成，在此处开始执行动画  &#125;);</code></pre>  </details>  记得删除css中的animation属性  <p>  使用js在我的本地端是可以预加载的，但是放到网站就不行，这里我感到很奇怪，但是我还有我自己的预加载土方法，嘻嘻嘻</p><h5 id="html-css进行预加载"><a href="#html-css进行预加载" class="headerlink" title="html+css进行预加载:"></a>html+css进行预加载:</h5>  <details>  <summary>展开查看</summary><pre><code class="css">.aa&#123;  background-image: url(../image/bg1.jpg);  width: 0;  height: 0;&#125;.aa1&#123;  background-image: url(../image/bg2.jpg);   width: 0;  height: 0;&#125; .aa2&#123;  background-image: url(../image/bg3.jpg);    width: 0;  height: 0;&#125; .aa3&#123;  background-image: url(../image/bg4.jpg);   width: 0;  height: 0;&#125; .aa4&#123;  background-image: url(../image/bg5.jpg);  width: 0;  height: 0;&#125;.aa5&#123;  background-image: url(../image/bg6.jpg);  width: 0;  height: 0;&#125;.aa6&#123;  background-image: url(../image/bg7.jpg);  width: 0;  height: 0;&#125;.aa7&#123;  background-image: url(../image/bg8.jpg);  width: 0;  height: 0;&#125;</code></pre><pre><code class="html">        &lt;div class=&quot;aa&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa1&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa2&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa3&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa4&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa5&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa6&quot;&gt;&lt;/div&gt;        &lt;div class=&quot;aa7&quot;&gt;&lt;/div&gt;</code></pre></details><h5 id="简单粗暴！"><a href="#简单粗暴！" class="headerlink" title="简单粗暴！"></a>简单粗暴！</h5><p>最后还是使用纯html+css完成了这个轮播切换效果，哈哈哈哈哈</p>]]></content>
    
    
    <summary type="html">喜欢我背景轮播的看过来，你值得拥有(^_^)</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络</title>
    <link href="https://chi1314.github.io/2023/04/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>https://chi1314.github.io/2023/04/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</id>
    <published>2023-04-14T13:03:29.000Z</published>
    <updated>2023-05-29T12:05:07.318Z</updated>
    
    <content type="html"><![CDATA[<h4 id="第一章思维导图概论"><a href="#第一章思维导图概论" class="headerlink" title="第一章思维导图概论"></a>第一章思维导图概论</h4><img src="jw1.jpg" alt="2023-2" style="zoom:100%;max-width:100%;" />第一章总结<img src="jw1-1.png" alt="2023-2" style="zoom:100%;max-width:100%;" />其中第八点扩展：电路传输：设备要求高，但传输速度最快，独享带宽分组传输：传输速度较慢，但传输效率最高，每条线路利用率最高，和报文一样是共享带宽总线拓扑：一定为广播的传输方式<h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><p>思维导图：<br><img src="jw2.jpg" alt="2023-2" style="zoom:100%;max-width:100%;" /><br>物理层总结：<br><img src="jw2-1.png" alt="2023-2" style="zoom:100%;max-width:100%;" /><br>补充：<br>串行传输：传输距离更远，但是速度相对并行更慢<br>同步传输：传输的数据必须按顺序一个一个传，需要排队，但是可靠性更高<br>异步传输：传输效率高，但可靠性不如同步传输.</p><h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p>思维导图：<br><img src="jw3.jpg" alt="2023-2" style="zoom:100%;max-width:100%;" /><br>数据链路层总结：<br><img src="jw3-1.png" alt="2023-2" style="zoom:100%;max-width:100%;" /></p><p>知识点终点集结：<br>计算机网络定义、功能、和组成：<br>计算机网络性能指标：</p><p style="color:blue;">带宽：是指网络连接的最大数据传输速率<b>时延：是指数据从源到达目的地所需的时间，包括传播延迟、处理延迟和排队延迟等<b>传输速率：是指网络上一段时间内实现的数据传输速率<b>吞吐量：是指网络连接上单位时间内传输的数据量<b>丢包率：是指在数据传输过程中发生丢失数据包的比例<b></p>协议及其三要素：<p style="color:blue;">语义、语法、时序</p>香农公式：<p style="color:blue;">信道的容量C与信道带宽W成正比，与信噪比（S/N）的对数也成正比。具体表述为C=W log2(1+S/N)。其中，W是信道的带宽，S是信号平均功率，N是噪声功率</p>复用技术及其特点：频分复用FDM：]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;第一章思维导图概论&quot;&gt;&lt;a href=&quot;#第一章思维导图概论&quot; class=&quot;headerlink&quot; title=&quot;第一章思维导图概论&quot;&gt;&lt;/a&gt;第一章思维导图概论&lt;/h4&gt;&lt;img src=&quot;jw1.jpg&quot; alt=&quot;2023-2&quot; style=&quot;zoom:1</summary>
      
    
    
    
    
    <category term="计算机网络" scheme="https://chi1314.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-7</title>
    <link href="https://chi1314.github.io/2023/03/13/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-7/"/>
    <id>https://chi1314.github.io/2023/03/13/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-7/</id>
    <published>2023-03-13T10:11:30.000Z</published>
    <updated>2023-03-13T14:18:23.444Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-文件的读取和写入"><a href="#1-文件的读取和写入" class="headerlink" title="1.文件的读取和写入"></a>1.文件的读取和写入</h4><pre><code class="py"># 打开文件f=open(&quot;/Users/cengxianming/Desktop/python-idle/python第一章/第一章（1）/1.type使用.py&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;)# line=f.read(20)#print(line) 读取前20个字节#print(f.read()) 读取全部字节 输出类型为io-文件# lines=f.readlines()# 读取文件的全部行，并封装到列表# print(lines)  #输出为列表# 输出单行列表# lines1=f.readline()#print(lines1) #只输出一行，且输出为列表# for循环读取文件for x in f:    print(f&quot;每一回数据&#123;x&#125;&quot;) #这个为单行单行的读f.close()# 如果不关闭，此文件将一直被占用#with open() 带有自动关闭功能with open(&quot;/Users/cengxianming/Desktop/python-idle/python第一章/第一章（1）/1.type使用.py&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;) as lin:    for y in lin:        print(y)</code></pre><img src="python7.jpg"><h4 id="2-判断单词出现累计"><a href="#2-判断单词出现累计" class="headerlink" title="2.判断单词出现累计"></a>2.判断单词出现累计</h4><pre><code class="py">f=open(&quot;python第一章/第一章（1）/1.type使用.py&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;)# 全部读取#num=f.read()#print(num.count(&quot;n&quot;))# 5# 一行一行读取nun1=0for x in f:   x=x.strip() # 直接调用本身，去除里面的前后空格和换行符   y=x.strip(&quot;&quot;)# 将每个单词用空格分隔开，在匹配   print(y)   for z in y :       if z==&quot;t&quot;:# 问题：这里只能索引单个字符           nun1+=1print(f&quot;print出现&#123;nun1&#125;次&quot;)            f.close()</code></pre><h4 id="3-文件的写入操作"><a href="#3-文件的写入操作" class="headerlink" title="3.文件的写入操作"></a>3.文件的写入操作</h4><pre><code class="py">f=open(&quot;python第一章/第一章（7）/1.txt&quot;,&quot;w&quot;,encoding=&quot;UTF-8&quot;)f.write(&quot;hello world&quot;)# 清空文件内的内容，然后添加对应字段，如果对应路径没有此文件，会自动创建文件f.flush()# 刷新文件内容f.close()# 档close存在时，flush可以不写，close运行自动刷新</code></pre><img src="file-write.jpg"><h4 id="4-文件的追加操作"><a href="#4-文件的追加操作" class="headerlink" title="4.文件的追加操作"></a>4.文件的追加操作</h4><pre><code class="py">f=open(&quot;python第一章/第一章（7）/1.txt&quot;,&quot;a&quot;,encoding=&quot;UTF-8&quot;)f.write(&quot;I like you&quot;) # 这种方式也是写入文件，不会改变原文件内容，在原文件最后加入对应字符f.flush()# 换行追加f.write(&quot;\n蓝幽&quot;)f.close</code></pre><h4 id="5-文件操作练习案例"><a href="#5-文件操作练习案例" class="headerlink" title="5.文件操作练习案例"></a>5.文件操作练习案例</h4><pre><code class="py">&quot;&quot;&quot;open和r模式打开一个文件对象，并读取文件open和w模式打开另-个文件对象，用于文件写出for循环内容，判断是否是测试不是测试就write写出，是测试就continue跳过将2个文件对象均close (&quot;&quot;&quot;# 打开文件名读取fr=open(&quot;python第一章/第一章（7）/2.txt&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;)# 打开文件写入fw=open(&quot;python第一章/第一章（7）/3.txt&quot;,&quot;w&quot;,encoding=&quot;UTF-8&quot;)# 循环读取文件for x in fr:    x=x.strip()       if x.split(&quot;,&quot;)[4]==&quot;测试&quot;:# split分割后变为列表        continue    fw.write(x)    fw.write(&quot;\n&quot;)fr.close()fw.close()    </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-文件的读取和写入&quot;&gt;&lt;a href=&quot;#1-文件的读取和写入&quot; class=&quot;headerlink&quot; title=&quot;1.文件的读取和写入&quot;&gt;&lt;/a&gt;1.文件的读取和写入&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;py&quot;&gt;# 打开文件
f=open(&amp;quot</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-6</title>
    <link href="https://chi1314.github.io/2023/03/12/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-6/"/>
    <id>https://chi1314.github.io/2023/03/12/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-6/</id>
    <published>2023-03-12T13:51:23.000Z</published>
    <updated>2023-03-12T13:54:30.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数的进阶使用"><a href="#函数的进阶使用" class="headerlink" title="函数的进阶使用"></a>函数的进阶使用</h1><h4 id="1-函数的多返回值"><a href="#1-函数的多返回值" class="headerlink" title="1.函数的多返回值"></a>1.函数的多返回值</h4><pre><code class="py">def fun():    return 1,2,3a,b,c=fun()print(a)# 1print(b)# 2print(c)# 3</code></pre><h4 id="2-函数的多种参数使用"><a href="#2-函数的多种参数使用" class="headerlink" title="2.函数的多种参数使用"></a>2.函数的多种参数使用</h4><pre><code class="py"># 1.位置参数  2.关键字参数  3.缺省参数  4.不定长参数def fun(name,age,gender):    print(f&quot;姓名：&#123;name&#125; 年龄：&#123;age&#125; 性别：&#123;gender&#125;&quot;)# 1.位置参数fun(&quot;蓝幽&quot;,&quot;22&quot;,&quot;男&quot;)# 姓名：蓝幽 年龄：22 性别：男#2.关键字参数fun(age=21,name=&quot;lanyou&quot;,gender=&quot;男&quot;)  #姓名：蓝幽 年龄：22 性别：男 一样的结果，但是可以乱序#3.缺省参数，注意，默认值一直要放到函数括号内后面，否则会报错def fun1(name,age,gender=&quot;男&quot;):    print(f&quot;姓名：&#123;name&#125; 年龄：&#123;age&#125; 性别：&#123;gender&#125;&quot;)fun1(&quot;lanyou&quot;,22)#   姓名：蓝幽 年龄：22 性别：男  因为有默认值，使用不需要为性别传参数# 4.不定长参数 可以传入任意个参数，但输出为元组形式def fun2(*args):    print(args)fun2(1,2,3,4,&quot;name&quot;) #(1, 2, 3, 4, &#39;name&#39;)# 这种两个*的不定长同样可以传任意个参数，但必须为键值对的形式，输出为字典的形式def fun3(**kwargs):    print(kwargs)   fun3(name=&quot;lanyou&quot;,age=23,gender=&quot;男&quot;)#&#123;&#39;name&#39;: &#39;lanyou&#39;, &#39;age&#39;: 23, &#39;gender&#39;: &#39;男&#39;&#125; </code></pre><h4 id="3-作为参数传递"><a href="#3-作为参数传递" class="headerlink" title="3.作为参数传递"></a>3.作为参数传递</h4><pre><code class="py">def fun(x,y):    return x+ydef fun1(fun):    a=fun(1,2)  # 传入函数，也就是逻辑结构，往常传入的是数据    print(a)fun1(fun)       </code></pre><h4 id="4-lambda匿名函数"><a href="#4-lambda匿名函数" class="headerlink" title="4.lambda匿名函数"></a>4.lambda匿名函数</h4><pre><code class="py">#lambdy 参数: 函数体def fun(an):    b=an(1,2)    print(b)fun(lambda x,y:x+y )#更加简洁    </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数的进阶使用&quot;&gt;&lt;a href=&quot;#函数的进阶使用&quot; class=&quot;headerlink&quot; title=&quot;函数的进阶使用&quot;&gt;&lt;/a&gt;函数的进阶使用&lt;/h1&gt;&lt;h4 id=&quot;1-函数的多返回值&quot;&gt;&lt;a href=&quot;#1-函数的多返回值&quot; class=&quot;header</summary>
      
    
    
    
    <category term="python" scheme="https://chi1314.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://chi1314.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-5</title>
    <link href="https://chi1314.github.io/2023/03/12/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-5/"/>
    <id>https://chi1314.github.io/2023/03/12/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-5/</id>
    <published>2023-03-12T07:19:28.000Z</published>
    <updated>2023-03-13T09:34:43.895Z</updated>
    
    <content type="html"><![CDATA[<img src="python5.png"><h4 id="1-数据容器list"><a href="#1-数据容器list" class="headerlink" title="1.数据容器list"></a>1.数据容器list</h4><pre><code class="py"># 列表语法,列表内不限制类型name=[&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;]# 列表索引print(name[0])# lanprint(name[-1])# youprint(name[-2])# likeprint(name[1]) # you# 列表嵌套a=[[1,2,3],[5,6,7]]print(a[1][1]) # 6</code></pre><h4 id="2-list的常用操作"><a href="#2-list的常用操作" class="headerlink" title="2.list的常用操作"></a>2.list的常用操作</h4><pre><code class="py"># 类似mysql增删改查操作#1. list 查找下标函数index()，查操作name=[&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;]a=name.index(&quot;I&quot;) # 查找I的下标为多少print(a)# 2#2. 修改下标索引值 类似更新操作name[0]=&quot;蓝幽&quot; #更新下标为0的值print(name)#[&#39;蓝幽&#39;, &#39;you&#39;, &#39;I&#39;, &#39;like&#39;]#3. 插入列表值，类似增操作,但不能插入到最后的位置name.insert(2,&quot;love&quot;)print(name)# [&#39;蓝幽&#39;, &#39;you&#39;, &#39;love&#39;, &#39;I&#39;, &#39;like&#39;]#4. 插入列表值，也是增操作，将数据插入到最后的位置name.append(&quot;you&quot;)print(name)#[&#39;蓝幽&#39;, &#39;you&#39;, &#39;love&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;]#5. 插入一批新元素a=[1,2,3]name.extend(a)print(name)# [&#39;蓝幽&#39;, &#39;you&#39;, &#39;love&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;, 1, 2, 3]#6. 删除，有两种方式# 1.  del 列表[下标]  只能删除一个元素del name[8]print(name)# [&#39;蓝幽&#39;, &#39;you&#39;, &#39;love&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;, 1, 2]# 2.  列表.pop(下标),这个方法与del的不同在于，这个是取出对应下标值，可以把取出的值传给立一个变量b=name.pop(7)print(name)print(b)# [&#39;蓝幽&#39;, &#39;you&#39;, &#39;love&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;, 1]# 2#7. 删除匹配项remove(),注意：remove删除的是从前往后匹配到的第一个值，只能删除一个，删除多个需要多次调用name.remove(&quot;you&quot;)print(name)# [&#39;蓝幽&#39;, &#39;love&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;, 1]#8. 清空列表name.clear()print(name)# []#9. 统计列表内某元素的数量name1=[&#39;蓝幽&#39;, &quot;you&quot;,&#39;love&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;, 1]num=name1.count(&quot;you&quot;)print(f&quot;name1中的you有:&#123;num&#125;个&quot;)# name1中的you有:2个 #10. 统计列表内全部元素的数量 也就是长度len()c=len(name1)print(c)# 7</code></pre><h4 id="3-list操作练习案例"><a href="#3-list操作练习案例" class="headerlink" title="3.list操作练习案例"></a>3.list操作练习案例</h4><pre><code class="py">&quot;&quot;&quot;有一个列表，内容是：121,25,21,23,22,20]，记录的是一批学生的年龄请通过列表的功能（方法），对其进行1. 定义这个列表，并用变量接收它2. 追加一个数字31，到列表的尾部3. 追加一个新列表(29,33，30]，到列表的尾部4. 取出第一个元素（应是：215. 取出最后一个元素（应是：30）6. 查找元素31，在列表中的下标位置&quot;&quot;&quot;age=[21,25,21,23,22,20]age.append(31)a=[29,33,30]age.extend(a)age.pop(0)age.pop(-1)age.index(31)</code></pre><h4 id="4-list遍历"><a href="#4-list遍历" class="headerlink" title="4.list遍历"></a>4.list遍历</h4><pre><code class="py"># while循环遍历,输出列表内的元素def name():    i=0    a=[&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;]    while i&lt;len(a):        b=a[i]        print(b)        i+=1name()        # for循环遍历        def num():        a=[&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;]     for i in a:        print(i)             num()        # 练习案例&quot;&quot;&quot;练习案例：取出列表内的偶数定义一个列表，内容是：[1,2,3,4,5,6,7,8,9,10]• 遍历列表，取出列表内的偶数，并存入一个新的列表对象中使用while循环和for循环各操作一次D:Idevlpythonlpython3.10.4lpython.exe D:/python-learn/05_数据容器/test.py通过while循环，从列表：[1，2，3，4，5，6，7，8，9，10]中取出偶数，组成新列表：[2，4,6，8, 10]通过for循环，从列表：[1，2，3，4,5，6，7，8，9，10]中取出偶数，组成新列表：[2,4,6,8,10]提示：• 通过f判断来确认偶数通过列表的append方法，来增加元素&quot;&quot;&quot;   # while循环           a=[1,2,3,4,5,6,7,8,9,10]b=[]i=0while  i&lt;len(a):    c=a[i]    if c%2==0:        b.append(c)    i+=1print(b) c=[]# for循环for i in a:    if i%2==0:        c.append(i)print(c)         </code></pre><h4 id="5-tuple元组"><a href="#5-tuple元组" class="headerlink" title="5.tuple元组"></a>5.tuple元组</h4><pre><code class="py"># 元组的定义a=(1,2,3)b=()c=tuple()# 元组定义单个元素d=(&quot;lan&quot;)print(type(d),d)# str lan为字符串类型d=(&quot;you&quot;,)# 注意逗号print(type(d),d)# tuple you#元祖的嵌套,索引同列表一样a=((1,2,3),(4,5,6))f=(&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;)# 元组的操作indexprint(f.index(&quot;I&quot;)) #2# countnum=f.count(&quot;you&quot;)print(num)  #2# lennum1=len(f)print(num1)  #5# while循环i=0name=(&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;)while i&lt;len(name):    print(f&quot;name里有元素:&#123;name[i]&#125;&quot;)    i+=1# for循环for j in name:    print(j)    # 元组不能被修改，但是元素里面的列表可以被修改a1=(1,2,[3,4,5])  print(a1)a1[2][1]=&quot;you&quot;a1[2][0]=&quot;lan&quot;a1[2][2]=&quot;like&quot;print(a1)  #(1, 2, [3, 4, 5])#(1, 2, [&#39;lan&#39;, &#39;you&#39;, &#39;like&#39;])&quot;&quot;&quot;定义一个元组，内容是：（&#39;周杰轮&#39;，11, [&#39;footbal!&#39;,&#39;music]），记录的是一个学生的信息（姓名、年龄、爱好）请通过元组的功能（方法），对其进行1. 查询其年龄所在的下标位置2. 查询学生的姓名3. 删除学生爱好中的football4. 增加爱好：coding到爱好list内&quot;&quot;&quot;student=(&quot;蓝幽&quot;,21,[&quot;football&quot;,&quot;music&quot;])print(student.index(21))print(student[1])student[2].remove(&quot;football&quot;)print(student)student[2].append(&quot;coding&quot;)print(student)</code></pre><h4 id="6-字符串"><a href="#6-字符串" class="headerlink" title="6.字符串"></a>6.字符串</h4><pre><code class="py"># 字符串容器，为不可修改容器a=&quot;lanyou I like you&quot;# 取下标b=a[2]c=a[-16]print(b,c)# n,a# index 方法  索引下标value=a.index(&quot;like&quot;)print(f&quot;like再a中的起始下标是&#123;value&#125;&quot;) # 9# replace 方法， 替换 注意这个方法不是修改字符串，而是得到一个新的字符串value1=a.replace(&quot;lanyou&quot;,&quot;蓝幽&quot; )print(a,value1)#lanyou I like you  蓝幽 I like you# split 方法  分割value2=a.split(&quot;,&quot;) print(value2) #[&#39;lanyou I like you&#39;]value3=a.split(&quot; &quot;)print(value3) #[&#39;lanyou&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;] 类型为列表 #strip 方法 去除前后空格或内容,可传参，也可不传参a=&quot;lanyou I like you&quot;b=a.strip()#默认去除前后空格print(b)# lanyou I like youc=a.strip(&quot;l&quot;)print(c)# anyou I like you# count 统计对应字符出现的次数num=a.count(&quot;y&quot;) print(num)# 2# len 统计长度b=len(a)print(b)# 17# 练习案例&quot;&quot;&quot;1.统计宇符串内有多少个&quot;it&quot;字符2.将字符串内的空格，全部替换为字符：&quot;|&quot;3.并按照&quot;|&quot;进行字符串分割，得到列表&quot;&quot;&quot;a=&quot;lanyou I like you&quot;print(a.count(&quot;l&quot;))b=a.replace(&quot; &quot;, &quot;|&quot;)print(b)c=b.split(&quot;|&quot;)print(c)&quot;&quot;&quot;2lanyou|I|like|you[&#39;lanyou&#39;, &#39;I&#39;, &#39;like&#39;, &#39;you&#39;]&quot;&quot;&quot;</code></pre><h4 id="7-序列的切片"><a href="#7-序列的切片" class="headerlink" title="7.序列的切片"></a>7.序列的切片</h4><pre><code class="py"># 序列指 列表，元组，字符串，也是不可修改# 列表的切片a=[1,2,3,4,5,6]b=a[1:5:1]# [起始下标：结束下标：步长]步长不写默认为1,注意，步长为负值也是可以的，这样会从后往前开始记入print(b)#[2, 3, 4, 5]# 元组的切片a=(1,2,3,4,5,6)b=a[0:3]print(b)# (1, 2, 3)# 字符串的切片a=&quot;lanyou&quot;b=a[0:5:2]print(b)#lno#序列反转b=a[::][::-1]print(b)#uoynal&quot;&quot;&quot;练习案例有字符串：方过薪月，员序程马黑来，nohtyP学&quot;•请使用学过的任何方式，得到&quot;黑马程序员&quot;可用方式参考：•倒序字符串，切片取出或切片取出，然后倒序split分隔&quot;，&quot;replace替换&quot;来&quot;为空，倒序字符串&quot;&quot;&quot;name=&quot;方过薪月,员序程马黑来,nohtyP学&quot;c=name[::-1][9:14]print(c) # 先倒后取d=name[5:10][::-1]print(d)# 先取后倒</code></pre><h4 id="8-集合的定义和操作"><a href="#8-集合的定义和操作" class="headerlink" title="8.集合的定义和操作"></a>8.集合的定义和操作</h4><pre><code class="py">#列表可修改、支持重复元素且有扇#元组、宇符串不可修改、支持重复元素且有序#而set集合就是不能重复且无序#定义集合a=&#123;&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;&#125;print(a)#&#123;&#39;you&#39;, &#39;lan&#39;, &#39;I&#39;, &#39;like&#39;&#125;随机排序且去重b=set() #定义空集，不能&#123;&#125;,因为&#123;&#125;被字典占用了print(b)# set()# 集合添加a=&#123;&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;&#125;a.add(&quot;love&quot;)print(a)#&#123;&#39;I&#39;, &#39;lan&#39;, &#39;like&#39;, &#39;love&#39;, &#39;you&#39;&#125;# 集合移除a=&#123;&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;&#125;a.remove(&quot;I&quot;)print(a)#&#123;&#39;like&#39;, &#39;you&#39;, &#39;lan&#39;&#125;# 集合取出a=&#123;&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;&#125;b=a.pop()#因为集合内部是无序的，所以也可认为是随机取出print(a,b)#&#123;&#39;you&#39;, &#39;like&#39;, &#39;I&#39;&#125; lan# 清空集合a=&#123;&quot;lan&quot;,&quot;you&quot;,&quot;I&quot;,&quot;like&quot;,&quot;you&quot;&#125;a.clear()print(a)#set()#集合的差集，但不会改变a集合和b集合a=&#123;1,2,3&#125;b=&#123;1,4,5&#125;c=a.difference(b)#意思可以认为是：a集合里面有哪些是和b集合是不同的，可以传print(c) # &#123;2,3&#125;  # 集合的差集并改变集合。消除差集a=&#123;1,2,3&#125;b=&#123;1,4,5&#125;c=a.difference_update(b)# 不能被传print(c)# noneprint(a)# &#123;2,3&#125;print(b)#&#123;1,4,5&#125;# 集合合并a=&#123;1,2,3&#125;b=&#123;1,4,5&#125;c=a.union(b)print(c)# &#123;1,2,3,4,5&#125;# 统计集合元素数量len()a=&#123;1,2,3,4,5,6,7,6,5&#125;num=len(a)print(num)# 7# 集合的遍历，因为集合内部元素是没有下标的，所以不能用while循环，只能for循环for x in a:    print(f&quot;a中有元素：&#123;x&#125;&quot;)&quot;&quot;&quot;a中有元素：1a中有元素：2a中有元素：3a中有元素：4a中有元素：5a中有元素：6a中有元素：7&quot;&quot;&quot;  &quot;&quot;&quot;练习案例有如下列表对象：mylist=[黑马程序员&#39;，&#39;传智播客！，&quot;黑马程序员&#39;，&quot;传智播客&#39;，&#39;itheima&#39;, &quot;itcast&#39;, &quot;itheima&#39;, &#39;itcast!&#39;best&#39;]请：• 定义一个空集合通过for循环遍历列表在for循环中将列表的元素添加至集合最终得到元素去重后的集合对象，并打印输出&quot;&quot;&quot;  mylist=[&#39;黑马程序员&#39;,&#39;传智播客！，&quot;黑马程序员&#39;,&#39;传智播客&#39;,&#39;itheima&#39;, &#39;itcast&#39;, &#39;itheima&#39;, &#39;itcast!&#39;,&#39;best&#39;]b=set()for x in mylist:      b.add(x)print(b)#&#123;&#39;itcast!&#39;, &#39;黑马程序员&#39;, &#39;传智播客&#39;, &#39;itcast&#39;, &#39;itheima&#39;, &#39;传智播客！，&quot;黑马程序员&#39;, &#39;best&#39;&#125;</code></pre><h4 id="9-字典"><a href="#9-字典" class="headerlink" title="9.字典"></a>9.字典</h4><pre><code class="py"># 字典定义a=&#123;&#125;a=dict()a=&#123;&quot;key&quot; :99&#125;# key不可为字典，就是说这里的a不能用key#字典内数据不能重复，后面重复的value会替代前面的valuea=&#123;&quot;key&quot;:99,&quot;key&quot;:88&#125;print(a)#&#123;&quot;key&quot;:88&#125;#基于key取出valuea=&#123;&quot;ll&quot;:33,&quot;kk&quot;:90,&quot;lo&quot;:80&#125;print(a[&quot;ll&quot;])# 33#定义嵌套字典a=&#123;&quot;lan&quot;:&#123;&quot;语文&quot;:98,&quot;数学&quot;:78,&quot;英语&quot;:90&#125;,   &quot;you&quot;:&#123;&quot;语文&quot;:97,&quot;数学&quot;:74,&quot;英语&quot;:39&#125;,    &quot;ya&quot;:&#123;&quot;语文&quot;:95,&quot;数学&quot;:70,&quot;英语&quot;:60&#125;    &#125;b=a[&quot;ya&quot;][&quot;语文&quot;]print(b)# 95#字典的常用操作# 1.获取对于的key值a=&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4&#125;print(a[&quot;c&quot;])#3# 2.添加和更新字典a[&quot;f&quot;]=5#有值就是添加a[&quot;d&quot;]=3.3#重复key就是更新# 3.删除fun=a.pop(&quot;a&quot;)# 4.清空字典a.clear() # 5.获取字典全部keyfun1=a.keys()print(fun1)#6.计算字典元素数量len(a)# 案例 给级别为2的人加一级并加工资1000name=&#123;&quot;wulihong&quot;:&#123;&quot;部门:&quot;:&quot;科技部&quot;,&quot;工资&quot;:3000,&quot;级别&quot;:1&#125;,      &quot;zhoujielun&quot;:&#123;&quot;部门:&quot;:&quot;市场部&quot;,&quot;工资&quot;:5000,&quot;级别&quot;:2&#125;,      &quot;zhangsan&quot;:&#123;&quot;部门:&quot;:&quot;科技部&quot;,&quot;工资&quot;:7000,&quot;级别&quot;:3&#125;&#125;for x in name.keys():    #print(name.keys())   # print(x)    if name[x][&quot;级别&quot;]==2:        name[x][&quot;级别&quot;]+=1        name[x][&quot;工资&quot;]+=1000print(name)        </code></pre><h4 id="10-各容器对比及转换排序"><a href="#10-各容器对比及转换排序" class="headerlink" title="10.各容器对比及转换排序"></a>10.各容器对比及转换排序</h4><pre><code class="py">a1=[1,2,3,4,5]a2=(1,2,3,4,5)a3=&quot;abcdefg&quot;a4=&#123;1,2,3,4,5&#125;a5=&#123;&quot;key1&quot;:1,&quot;key2&quot;:2,&quot;key3&quot;:3,&quot;key4&quot;:4,&quot;key5&quot;:5&#125;# len(),man(),min(),list(),tuple(),str(),set(),dict()#len()跳过# max()print(max(a1))#5print(max(a2))#5print(max(a3))#gprint(max(a4))#5print(max(a5))#key5#min同理取最小#list()print(list(a1))#[1, 2, 3, 4, 5]print(list(a2))#[1, 2, 3, 4, 5]print(list(a3))#[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;]print(list(a4))#[1, 2, 3, 4, 5]print(list(a5))#[&#39;key1&#39;, &#39;key2&#39;, &#39;key3&#39;, &#39;key4&#39;, &#39;key5&#39;]#tuple()print(tuple(a1))#(1, 2, 3, 4, 5)print(tuple(a2))#(1, 2, 3, 4, 5)print(tuple(a3))#(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;)print(tuple(a4))#(1, 2, 3, 4, 5)print(tuple(a5))#(&#39;key1&#39;, &#39;key2&#39;, &#39;key3&#39;, &#39;key4&#39;, &#39;key5&#39;)#str()print(str(a1))#&quot;[1, 2, 3, 4, 5]&quot;print(str(a2))#&quot;(1, 2, 3, 4, 5)&quot;print(str(a3))#&quot;abcdefg&quot;print(str(a4))#&quot;&#123;1, 2, 3, 4, 5&#125;&quot;print(str(a5))#&quot;&#123;&#39;key1&#39;: 1, &#39;key2&#39;: 2, &#39;key3&#39;: 3, &#39;key4&#39;: 4, &#39;key5&#39;: 5&#125;&quot;# set()print(set(a1))#&#123;1, 2, 3, 4, 5&#125;print(set(a2))#&#123;1, 2, 3, 4, 5&#125;print(set(a3))#&#123;&#39;g&#39;, &#39;b&#39;, &#39;e&#39;, &#39;a&#39;, &#39;c&#39;, &#39;f&#39;, &#39;d&#39;&#125;print(set(a4))#&#123;1, 2, 3, 4, 5&#125;print(set(a5))#&#123;&#39;key5&#39;, &#39;key3&#39;, &#39;key4&#39;, &#39;key2&#39;, &#39;key1&#39;&#125;#dict() 其他列表不能转字典，因为字典内存在键值对#排序 从小到大print(sorted(a1))print(sorted(a2))print(sorted(a3))print(sorted(a4))print(sorted(a5))# 从大到小print(sorted(a1,reverse=True))print(sorted(a2,reverse=True))print(sorted(a3,reverse=True))print(sorted(a4,reverse=True))print(sorted(a5,reverse=True))</code></pre><h4 id="11-字符串如何比较大小"><a href="#11-字符串如何比较大小" class="headerlink" title="11.字符串如何比较大小"></a>11.字符串如何比较大小</h4><pre><code class="py"># 字符串如何比较大小# 从头大尾，一位一位比较，，其中一位大，后面无需比较# 单个字符如何确定大小# 通过ascll表比较 A=65 Z=90 a=97 z=122</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;python5.png&quot;&gt;

&lt;h4 id=&quot;1-数据容器list&quot;&gt;&lt;a href=&quot;#1-数据容器list&quot; class=&quot;headerlink&quot; title=&quot;1.数据容器list&quot;&gt;&lt;/a&gt;1.数据容器list&lt;/h4&gt;&lt;pre&gt;&lt;code class</summary>
      
    
    
    
    <category term="python" scheme="https://chi1314.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://chi1314.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>十三条</title>
    <link href="https://chi1314.github.io/2023/03/09/%E5%8D%81%E4%B8%89%E6%9D%A1/"/>
    <id>https://chi1314.github.io/2023/03/09/%E5%8D%81%E4%B8%89%E6%9D%A1/</id>
    <published>2023-03-09T07:36:50.000Z</published>
    <updated>2023-03-09T07:48:06.271Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个普通人，努力完成的一两条还是可以的<br><br></p><h2 id="1-选择复利增长"><a href="#1-选择复利增长" class="headerlink" title="1.选择复利增长"></a>1.选择复利增长</h2><p>复利具有神奇的魔力，现在处处都在强调复利，这其中的奥秘就是指数曲线，因为指数曲线是创造财富的关键。</p><p>一家中型企业的价值如果按照每年50%的速度增长，那么它的规模可以在短时间内极速扩张。世界上少有企业具有真正的网络效应和高度的可扩展性，但是随着技术进步，这种情况会逐渐改变，这值得我们不断为之努力。</p><p>对个体的人生道路来说，我们也应该走成一条指数曲线。也就是说，我们要遵循不断向右增长的人生轨迹。在进行职业规划时，要选择具有复合效应的职业，而大多数职业的发展轨迹都是一条线性直线。</p><p>在线性职业领域，工作二十年的效率并不会比工作两年的效率高，像这样的职业不利于个人发展。</p><p>我们需要的是一份能保持不断学习的职业。随着职业发展，我们需要产出越来越多的成果。达成这一目标的途径多种多样，比如说资本、技术、品牌、网络效应和做管理。</p><p>专注于将你所定义的成功指标增加十倍是有用的，这些指标可以是赚钱、社会地位、世界级影响力或者其他东西。我乐意接受挑战，愿意在各种项目上花时间以解锁下一个项目。但是我希望在每一个项目上都能取得最大成就，创造职业生涯新高度。但是大多数人都被困于线性发展的泥潭，往往捡了芝麻丢了西瓜，我们要学会抓大放小，寻求跳跃式提升。</p><p>在我看来，无论是企业还是个人，最大的竞争优势就是要把目标放长远。我们要打开眼界，看出世界上不同体系之间交融互动的方式。复合增长最重要的就是眼光要尽可能放长远，这样的人才能抢占市场先机，获得最大回报。</p><p>要相信指数曲线，耐心坚持下去，最后一定会有惊喜。</p><h2 id="2-要有绝对自信"><a href="#2-要有绝对自信" class="headerlink" title="2.要有绝对自信"></a>2.要有绝对自信</h2><p>自信拥有不可思议的力量，就我认识的人来说，最成功的往往都是那些自信到离谱的人。</p><p>我们要尽早树立自信。如果你的判断常常都很准确，能带来很好的结果，那么你一定要加倍自信。</p><p>对自己不自信的人很难对未来抱有逆向思维，但是往往逆向思维才能创造出最大的价值。还记得很多年前马斯克带我参观SpaceX工厂，他详细地谈到了制造火箭的一些细节，但是让我印象最深的还是马斯克谈到向火星发射火箭时的表情，离开工厂时我就在想 “啊，这就是自信的样子”。</p><p>对大多数创业者来说，激发自己以及团队的士气可以说是最大的挑战之一，如果没有自信，这就成了几乎不可能完成的任务。但往往一个人越有雄心壮志，其受到的打击就会越多。大多数非常成功的人在面对人们的质疑时至少有一次决定是正确的，否则他们面临的挑战会更多。</p><p>我们在自信的同时也要保持清醒的自我认知，才能避免盲目自大。我曾经非常讨厌受到批评和质疑，并且总是设法规避这些批评。但现在我开始尝试听取这些意见，我会先设想这些批评是正确的，然后在这个基础上调整我的计划。做决定的过程充满了艰辛和痛苦，但也只有经历了这个过程才能将自信和自欺欺人区分开来。</p><p>保持自信与自我认知之间的平衡可以让人免于傲气、避免与他人脱节。</p><h2 id="3-学会独立思考"><a href="#3-学会独立思考" class="headerlink" title="3.学会独立思考"></a>3.学会独立思考</h2><p>创业很难，因为培养原创性思维很难。这种思维在学校里面是学不到的，实际上学校培养的是一种相反的思维方式，所以只能靠我们自己来培养原创性思维。</p><p>我们可以从第一性原理(first principles) 出发，从中想出新的点子，然后与人交流沟通，对这些想法进行改良，之后我们再用轻松快捷的方式进行实际测试。</p><p>对创业者来说，失败是家常便饭，但我们一定要抱有必胜的信念，要不断尝试、不断试错，只有这样才能得到幸运之神的眷顾。在这个过程中，最宝贵的经验之一就是，我们要学会在绝境中找到一线生机。我们经历的越多就会越对此深信不疑。要知道勇气来自于多次失败后的坚持不懈。</p><h2 id="4-做一个好销售"><a href="#4-做一个好销售" class="headerlink" title="4.做一个好销售"></a>4.做一个好销售</h2><p>光有自信是不够的，我们还要具备说服他人的能力。就某种程度来说，所有职业的本质都是销售。你必须向客户、潜在职员、媒体、投资者等宣传兜售你的计划。想要说服他们，首先你的计划要有广阔的发展前景。对于个人而言，你要具备良好的沟通能力、一定的个人魅力以及强大的执行能力。</p><p>具备良好的沟通能力十分重要，尤其是书面沟通。在这方面我的建议是：首先要保持思路清晰，然后就是尽量使用简洁明了的语言。</p><p>而要做好“销售”最好的方式就是真诚，要对自己推销的产品抱有自信。销售其实无异于其他技能，我们可以通过可以练习提高销售技能。但是出于某些原因（比如人们可能不喜欢销售），很多人认为销售技能不可习得。</p><p>做销售的另一个秘诀是:重要的事情要亲力亲为。在刚开始创业时，我非常乐意出差办事，这在很多人看来是不必要的，但是事事亲力亲为却给我带来了三次职业生涯的转折点，如果当时没有选择这样做，我可能会走上另一条道路。</p><h2 id="5-要有冒险精神"><a href="#5-要有冒险精神" class="headerlink" title="5.要有冒险精神"></a>5.要有冒险精神</h2><p>大多数人往往都高估了风险低估了回报。冒险对我们来说也很重要，因为人不可能永远不犯错，我们需要不断试错，学习并快速适应。</p><p>在职业生涯早期，人们往往更愿意冒险，因为那时你没有什么可失去的东西，但却可能得到很多。一旦一个人履行了自己的基本责任义务，就可以大胆冒险了。我篇幅可以先下小的赌注，如果赌输了会输掉1倍，但如果成功了，则可以赚到100倍。之后我们再沿着这个方向下更大的赌注。</p><p>但是要注意不能一直待在舒适圈。在YC，我们从谷歌和脸书长期工作的创始人身上看到了这样一个问题：当人们习惯了舒适的生活、稳定的工作和无论做什么都会取得成功的名气时，就很难将这些置之于身后了（人们总是将他们的生活方式与下一年的工资相匹配）。即使他们真的离开了，也非常有可能再回来。与长期利益相比，短期诱惑和便利往往更具吸引力，也更符合人的天性。</p><p>但当你摆脱了这些枯燥无味的工作，你可以跟随直觉将时间花在那些有趣的事情上。而想做到这一点，尽可能长时间地过着朴素灵动的生活是一个很好的方法。当然，任何选择背后都有相应的代价。</p><h2 id="6-保持专注"><a href="#6-保持专注" class="headerlink" title="6.保持专注"></a>6.保持专注</h2><p>专注可以让我们在工作中取得事半功倍的效果。磨刀不误砍柴工，在我认识的人中，那些花时间想明白了未来方向的人最后都得到了不错的结果。由此可见，做正确的事比长时间做事更重要。很多人都将自己的时间花在了无关紧要的事情上面。</p><p>一旦你想明白了该做什么，就不要犹豫，快速行动起来去完成优先事项。毕竟成功人士就没有执行力弱的。</p><h2 id="7-努力工作"><a href="#7-努力工作" class="headerlink" title="7.努力工作"></a>7.努力工作</h2><p>通过运用自己的聪明才智或者勤奋努力，一个人可以达成工作领域里百分之九十的成就，能做到这一点已经很不错了，但是想要尽量做到完美，达成百分之九十九的成就，那就必须要兼顾聪明与勤奋，因为这一阶段你的竞争者往往是两者兼备的人。</p><p>有付出才有收获，付出越多收获也就越大。努力工作可能会造成工作与生活失衡，我完全可以理解有的人选择去更好地平衡工作与生活，在工作中不那么拼命，但是拼命工作确实有很多好处，在多数情况下，努力工作会产生叠加效应，越是成功的人就越能成功。</p><p>这通常很有趣。生活中最大的乐趣之一就是找到你的目标，并且有所建树，然后你会发现你在这件事上的影响力比你自己本身更重要。一位YC创始人表示：他在离开一家大公司后，尽力发挥了自己的最大影响力，此时他发现自己变得更快乐、更充实。</p><p>为发挥出自己最大影响力而努力工作是值得庆祝的。我完全不能理解为什么在美国某些地区努力工作反而成了一件坏事，但我知道世界其他地区肯定不是这样的，那些地区的企业家表现出来的精力和干劲正在快速成为新的社会标杆。</p><p>你必须想出一条平衡之策，在努力工作的同时，又不至于透支身体。对此，虽然人们的应对之策不尽相同，但有条几乎不会出错的黄金准则，那就是与相处愉快的人一起从事喜欢的工作。</p><p>我认为，那些假装(在你生命中的某个时期)不用把精力放在工作上，就能平步青云的人，其实是在误人子弟。事实上，判断一个人能否笑到最后的关键因素之一就是工作耐力。</p><p>另外，我认为刚入职场时就应该要努力工作。努力工作就像利滚利一样，越早开始，获利时间就越长。一般来说，人们身上背负的责任越少，就越容易施展身手。</p><h2 id="8-大胆一点"><a href="#8-大胆一点" class="headerlink" title="8.大胆一点"></a>8.大胆一点</h2><p>在我看来，与轻松创业相比，人们多半会选择更具挑战性的事业。因为后者往往更激动人心，能带来更大的成就感和满足感。如果你在某个重大问题上取得了进展，就会有源源不断的人前来帮忙。志当存高远，不要害怕去做你真正想做的事情。</p><p>如果别人都在创办 meme 公司，而唯独你想创办一家基因编辑公司那就去做吧，不要犹豫。</p><p>追随你的好奇心。那些让你感到兴奋的事情，通常也适用于别人。</p><h2 id="9-足够坚定"><a href="#9-足够坚定" class="headerlink" title="9.足够坚定"></a>9.足够坚定</h2><p>很多人都不知道，只要你足够坚持，世界就会以你的意志为转移。但大多数人甚至都不会去尝试，只单纯认为世界有其自身的运作规律。</p><p>人的潜力是巨大的，只要敢想就能做成很多事。但大多数人都会怀疑自我、过早放弃，同时又不够努力，种种原因导致大多数人无法充分发挥自身潜能。</p><p>询问自身诉求，你通常不能得偿所愿，而且被拒绝的滋味往往不好受。但若一旦成功，效果就会好得出奇。</p><p>那些声称“我将永不言弃，直到梦想成真，不论前方有多少艰难险阻，我也会迎难而上”，并将其付诸行动的人，最后几乎总能获得成功。因为他们坚持了足够久，所以最终迎来了幸运之神的眷顾。</p><p>在这方面，爱彼迎 (Airbnb)是我认为的行动标杆。业内流传着许多有关爱彼迎的逸闻趣事，虽然我并不推崇他们的做法(比如透支信用卡、每顿都吃一元店买的麦片、乐此不疲地与强劲的对手进行较量等等) 但是正因为他们足够坚持，最后终于时来运转。</p><p>只有保持乐观才能足够坚定，而乐观这种性格特征是可以通过练习逐步提升的，而悲观者是很难成功的。</p><h2 id="10-保持强劲的市场竞争力"><a href="#10-保持强劲的市场竞争力" class="headerlink" title="10.保持强劲的市场竞争力"></a>10.保持强劲的市场竞争力</h2><p>大多数人都明白，企业竞争力越强，价值就越高。这点至关重要，而且也是显而易见的。这同样也适用于个人。如果你所从事的工作具有可替代性，那么你最终就会被薪资要求更低的人所取代。</p><p>增强竞争力的最佳方式就是建立话语权。例如，你可以利用好个人关系，打造强大的个人品牌，或是在不同领域的交叉点建立起自己的个人优势。当然增强竞争力的方式还有很多但不论采取什么方式，关键是你必须要做到这一点。</p><p>大多数人会模仿身边人的做法，但这种方式并不可取，如果一味模仿他人，那你还有什么竞争优势可言呢？</p><h2 id="11-建立人际网络"><a href="#11-建立人际网络" class="headerlink" title="11.建立人际网络"></a>11.建立人际网络</h2><p>出色的工作需要团队合作。打造既可密切合作又可轻松相处的优质人际网络是事业成功的必要因素。拥有优秀人才的人际网络的规模会决定你能成功的上限。</p><p>建立人际网络的有效方法之一是尽可能多帮助他人。长期以来，这种行为方式给我带来了最佳职场机遇以及四项最佳投资中的三项。我总是惊讶与发生在自己身上的意外之喜，仅仅因为我十年前曾帮助过一位企业创始人。</p><p>建立人际网络的另一个途径是拥有好的名声，不亏待每一个一起共事的人。要大方慷慨地与他人分享资源，这会给你带来10倍、100倍的回报。此外，要知人善用，让每个人都能充分施展自己的才华。</p><p>我们既要尽力挖掘他人的潜力但是又不能逼得太紧，这容易让人感到精疲力尽。每个人都有各自擅长的领域，因此，我们要多看看自己的优点，不要总盯着缺点，要用优点来定义自身。面对缺点，我们要承认它，想办法弥补它，不要让缺点成为我们前进路上的阻碍。我常能在一些创业者口中听到这样的说法“我不能做A，因为我不擅长B”。这种思维方式让我十分吃惊。这反映出他们缺乏创造力。弥补弱点的最佳方式是聘请互补的团队成员，而不是雇佣那些跟你擅长相同事情的人。</p><p>慧眼识珠挖掘未被发掘的人才是建立人际网络的有效途径。通过练习，我们能快速识别那些优质有动力、有创造力的人才。挖掘人才最简单的方式就是多社交，多与他人打交道并且与那些给你留下深刻印象的人保持联系。要记住一点，不要局限于他人过往的工作经验和当前成就，我们需要发掘那些有潜力且能在短时间激发潜能的人。</p><p>每当遇到新人，我都会扪心自问“这个人有异于常人的能力吗？”对于渴求人才的人来说，这个问题很值得思考。</p><p>建立人际网络的特例是找到你生命中的贵人，特别是在职业生涯早期。毫无疑问，能做到这点的最佳方法就是主动去帮助他人（记住，你必须在日后回报你的贵人！）</p><p>最后，我们要结交那些积极向上且志同道合之人。</p><h2 id="12-资产决定财富"><a href="#12-资产决定财富" class="headerlink" title="12.资产决定财富"></a>12.资产决定财富</h2><p>小时候，我对经济的最大误解就是人们通过高薪发财致富。虽然也有一些特例，比如说娱乐圈的艺人，但从以往的福布斯榜单来看，几乎没有人是靠高薪荣登榜单的。</p><p>拥有能迅速增值的东西才能真正发家致富。这些东西可以是商业资产、不动产、自然资源、知识产权等。但无论怎样，你需要实际拥有一些东西，而不是单靠出卖时间赚取工资，出卖时间赢来的财富只会呈慢速线性增长。</p><p>让事物迅速增值的最佳方法就是大量制造人们想要的东西。</p><h2 id="13-要有内驱力"><a href="#13-要有内驱力" class="headerlink" title="13.要有内驱力"></a>13.要有内驱力</h2><p>大多数人主要都是靠外部驱动，他们做事情是为了让别人佩服。这种做法坏处颇多，但以下两点最为突出：</p><p>首先这会导致你人云亦云，因循守旧。在工作中，你会过于在意他人的看法，这种在意程度可能已经远远超出了你的意识，并且这会阻碍你从事趣味性工作，即使你正在做这样的工作，也不过是在炒冷饭。</p><p>其次，这会让你误判风险等级。从短期影响来看，你会将注意力主要放在和他人的竞争上，以确保不会在竞争游戏中落后。</p><p>聪明人似乎更容易受到这种外驱力的影响。了解到了这一点可以帮助你摆脱这种影响，但帮助不大，我们必须要极其谨慎才能不至于掉入模仿他人的陷阱中。</p><p>我认识的大多数成功人士都是靠自我驱动。他们做事情是为了让自己心悦诚服，因为他们觉得给世界带来改变是自己的责任。当你赚得盆满钵满并且拥有了较高的社会地位之后，金钱和名誉对你的吸引力开始逐渐消失，这时候内驱力就成为了唯一的动力，推动你向更高的地方攀登。</p><p>这就是驱动力重要性的体现。驱动力是我了解他人时最先考察的点。我们很难用一套规则去定义正确的驱动力，但是当你遇到它时立刻就能有所体会。在这件事上，Jessica Livingston和Paul Graham是我认为的行动标杆。在YC创办的最初几年，人人都不看好它的发展，没有人认为YC能够成功。但是杰西卡和保罗很看好YC的发展，他们认为如果YC能够成功，将会对世界大有裨益，他们希望能够借此帮助到其他人，并且坚信这种新模式比现存的模式好。</p><p>最终你会发现成功是在自己看重的领域里做出出色的成绩。向着自己热爱的方向越早出发就能走得越远，没有热爱之事的人是很难取得成就的。</p>]]></content>
    
    
    <summary type="html">虽然是鸡汤文，但我还是想把他记录到这里，作为对自己的一种警醒。</summary>
    
    
    
    <category term="成长" scheme="https://chi1314.github.io/categories/%E6%88%90%E9%95%BF/"/>
    
    
    <category term="记录文" scheme="https://chi1314.github.io/tags/%E8%AE%B0%E5%BD%95%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-4</title>
    <link href="https://chi1314.github.io/2023/03/07/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-4/"/>
    <id>https://chi1314.github.io/2023/03/07/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-4/</id>
    <published>2023-03-07T02:49:12.000Z</published>
    <updated>2023-03-12T07:21:02.442Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-len函数"><a href="#1-len函数" class="headerlink" title="1.len函数"></a>1.len函数</h4><pre><code class="py"># len函数：统计字符串长度str=&quot;jdskhcn&quot;str1=&quot;lanyou&quot;print(len(str1))# 7</code></pre><h4 id="2-自定义函数"><a href="#2-自定义函数" class="headerlink" title="2.自定义函数"></a>2.自定义函数</h4><pre><code class="py"># def 函数定义def san():    print(&quot;I am lanyou&quot;)san()</code></pre><h4 id="3-函数传入参数"><a href="#3-函数传入参数" class="headerlink" title="3.函数传入参数"></a>3.函数传入参数</h4><pre><code class="py"># 传参def add(x,y):    z=x+y    print(f&quot;&#123;x&#125;+&#123;y&#125;=&#123;z&#125;&quot;)    add(2,3)    # 2+3=5# 练习案例&quot;&quot;&quot;练习案例：升级版自动查核酸定义一个函数，名称任意，并接受一个参数传入（数字类型，表示体温）在函数内进行体温判断 （正常范围：小于等于37.5度），并输出如下内容：欢迎来到黑马程序员！请出示您的健康码以及72小时核酸证明，并配合测量体温！体温测量中，您的体温是：37.3度，体温正常请进！欢迎来到黑马程序员！请出示您的健康码以及72小时核酸证明，并配合测量体温！体温测量中，您的体温是：39.3度，需要隔离！&quot;&quot;&quot;def show(a):    if a&lt;37.5:        print(&quot;体温正常&quot;)      else:        print(&quot;体温异常&quot;)        b=float(input(&quot;请输入你的体温&quot;))show(b) # 注意，有参数值的必须放在列表最右边# def fun(a=3,b,c): #   print(a,b,c) 会出现报错def fun(a,b,c=7):    print(a,b,c) # 成功    </code></pre><h4 id="4-return"><a href="#4-return" class="headerlink" title="4.return"></a>4.return</h4><h1 id="函数return的应用"><a href="#函数return的应用" class="headerlink" title="函数return的应用"></a>函数return的应用</h1><pre><code class="py">def add(a,b):    c=a+b    return cx=add(3,4)print(x)# 返回值之none类型def say():    print(&quot;lanyou&quot;)    return Nonea=say()print(f&quot;无返回值的函数，返回的内容是&#123;a&#125;&quot;)print(f&quot;无返回值的函数，返回的类型是&#123;type(a)&#125;&quot;)def check_age(age):    if age&gt;18:        return &quot;已成年&quot;    else:        return Noneb=check_age(19)# 在if语句中none=false 有返回值则为trueif  not b:    print(&quot;未成年，不能进入&quot;) else:    print(&quot;qingjin&quot;)# none还可以符给变量为空值name=None          </code></pre><h4 id="5-函数说明文档"><a href="#5-函数说明文档" class="headerlink" title="5.函数说明文档"></a>5.函数说明文档</h4><pre><code class="py">def add(x,y):    &quot;&quot;&quot;    两数相加    :param x:相加的第一个数字    :param y:相加的第二个数字    :return: 返回相加的结果         &quot;&quot;&quot;    z=x+y    return zadd(1,3)#加了注释之后有鼠标悬停查看解释的效果</code></pre><h4 id="6-函数的嵌套调用"><a href="#6-函数的嵌套调用" class="headerlink" title="6.函数的嵌套调用"></a>6.函数的嵌套调用</h4><pre><code class="py"># 函数的嵌套调用是从上往下执行的def a():    print(&quot;a&quot;)def b():    print(&quot;b&quot;)    a()    print(&quot;c&quot;)b() # 结果为b a c       # 作用域# 变量在函数内的话，则这个变量不能在函数以外被调用# 变量在函数外的话，则这个变量为全局变量，都可以被调用a=200def sum():    a=100    print(a)    print(a)# 200 说明这个函数不会改变全局变量a的值def sum1():    global a    a=500    print(a)# 500    sum()# 100sum1()# 500print(a) # 500，加了global说明调用了全局变量可以修改了</code></pre><h4 id="7-函数使用综合案例ATM"><a href="#7-函数使用综合案例ATM" class="headerlink" title="7.函数使用综合案例ATM"></a>7.函数使用综合案例ATM</h4><pre><code class="py">&quot;&quot;&quot;综合案例：黑马ATM• 定义一个全局变量：money，用来记录银行卡余额（默认5000000）定义一个全局变量：name，用来记录客户姓名（启动程序时输入）定义如下的函数：查询余额函数存款函数取款函数主菜单函数要求：程序启动后要求输入客户姓名查询余额、存款、取款后都会返回主菜单存款、取款后，都应显示一下当前余额客户选择退出或输入错误，程序会退出，否则一直运行&quot;&quot;&quot; money=2000def yue():     global money    global name    print(f&quot;姓名：&#123;name&#125;:&quot;)    print(f&quot;余额：&#123;money&#125;&quot;)def cungaun():    z=int(input(&quot;输入你要存取的金额：&quot;))    global money    money+=z    print(&quot;存取成功&quot;)     yue()  def qukuan():    x=int(input(&quot;请输入你要取走的金额：&quot;))    global money    money-=x    print(&quot;请拿走现金&quot;)    yue()def main():    print(&quot;1.余额&quot;)    print(&quot;2.存款&quot;)    print(&quot;3.取款&quot;)    print(&quot;4.退出&quot;)    y=int(input(&quot;请选择你要进行的的操作：&quot;))    if y==1:        yue()        return main()    elif y==2:        cungaun()         return main()    elif y==3:        qukuan()         return main()    elif y==4:        print(&quot;欢迎下次使用&quot;)    else:        return &quot;输入错误&quot; name=input(&quot;请输入你的姓名：&quot;)print(f&quot;欢迎&#123;name&#125;&quot;)main()    </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-len函数&quot;&gt;&lt;a href=&quot;#1-len函数&quot; class=&quot;headerlink&quot; title=&quot;1.len函数&quot;&gt;&lt;/a&gt;1.len函数&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;py&quot;&gt;# len函数：统计字符串长度
str=&amp;quot;jdskh</summary>
      
    
    
    
    <category term="python" scheme="https://chi1314.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://chi1314.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-3</title>
    <link href="https://chi1314.github.io/2023/03/03/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-3/"/>
    <id>https://chi1314.github.io/2023/03/03/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-3/</id>
    <published>2023-03-03T14:02:45.000Z</published>
    <updated>2023-03-03T14:12:18.183Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-while循环"><a href="#1-while循环" class="headerlink" title="1.while循环"></a>1.while循环</h4><pre><code class="py">i=0while i&lt;100:    print(&quot;lanyou I like you&quot;)    i+=1# 练习案例，求1+·····+100的和i=0sum=0while i&lt;=100:    sum+=i    i+=1print(sum)    </code></pre><h4 id="2-while猜数字案例"><a href="#2-while猜数字案例" class="headerlink" title="2.while猜数字案例"></a>2.while猜数字案例</h4><pre><code class="py"># 无限次猜测，直到猜中为止# 每一次猜不中，会提示大了或者小了# 猜玩数字后，提示猜了几次import randomnum=random.randint(1,100)a=Truei=0while a:    gress=int(input(&quot;猜数字(1-100):&quot;))        i+=1    if gress==num:        a=False        print(f&quot;恭喜猜中了，你猜了&#123;i&#125;次&quot;)    elif gress&gt;num:        print(&quot;猜大了，再猜一次吧&quot;)    else:        print(&quot;猜小了，再猜一次吧&quot;)         </code></pre><h4 id="3-while循环嵌套"><a href="#3-while循环嵌套" class="headerlink" title="3.while循环嵌套"></a>3.while循环嵌套</h4><pre><code class="py"># 每天向蓝幽表白，并且送3朵玫瑰花，累计表白100天成功i=0while i&lt;=100:    print(f&quot;今天是第&#123;i&#125;天表白&quot;)    j=1    while j&lt;=3:        print(f&quot;这是今天送的第&#123;j&#125;朵玫瑰花&quot;)        j+=1    i+=1    print(&quot;蓝幽,I like you&quot;)print(f&quot;今天是第&#123;i-1&#125;天表白，终于表白成功了&quot;)        </code></pre><h4 id="4-while循环嵌套案例"><a href="#4-while循环嵌套案例" class="headerlink" title="4.while循环嵌套案例"></a>4.while循环嵌套案例</h4><pre><code class="py"># while循环嵌套打印九九乘法表i=1while i&lt;10:    j=1    while j&lt;=i:        sum=i*j        print(f&quot;&#123;i&#125;*&#123;j&#125;=&#123;i*j&#125;\t&quot;,end=&quot;&quot;)        j+=1    i+=1    print() # 换行输出</code></pre><h4 id="5-for循环基础语法"><a href="#5-for循环基础语法" class="headerlink" title="5.for循环基础语法"></a>5.for循环基础语法</h4><pre><code class="py"># x为临时变量，这个语句意思是将name中的字符逐个赋予给x打印出来# for循环注意点：1.无法定义循环条件，只能被动取出数据处理 2.循环内的语句，需要有空格缩进name=&quot;lanyou&quot;for x in name:    print(x)</code></pre><h4 id="6-for循环案例"><a href="#6-for循环案例" class="headerlink" title="6.for循环案例"></a>6.for循环案例</h4><pre><code class="py">#定义字符串变量name，內容为：oritheima is a brand of itcast&quot;# 通过for循环，遍历此字符串 lanyoushigeaixuederen，统计有多少个英文字母：&quot;a&quot;&quot;&quot;&quot;提示：1. 计数可以在循环外定义一个整数类型变量用来做累加计数2.判断是否为字母&quot;a&quot;，可以通过计语句结合比较运算符来完成&quot;&quot;&quot;name=&quot;lanyoushigeaixuederen&quot;i=0for x in name:    if x==&quot;a&quot;:        i+=1print(f&quot;&#123;name&#125;里面有&#123;i&#125;个a&quot;)</code></pre><h4 id="7-range语法"><a href="#7-range语法" class="headerlink" title="7.range语法"></a>7.range语法</h4><pre><code class="py"># range是一个序列a=range(5)print(a)for x in a:    print(x,)a=range(5,10)print(a)for x in a:    print(x,)a=range(5,10,2)print(a)for x in a:    print(x,)# 5,7,9 2为步长</code></pre><h4 id="8-range使用案例"><a href="#8-range使用案例" class="headerlink" title="8.range使用案例"></a>8.range使用案例</h4><pre><code class="py"># 有几个偶数# 定义一个数字变量num，内容随意并使用range(）语句，# 获取从1到num的序列，使用for循环遍历它。在遍历的过程中，统计有多少偶数出现&quot;&quot;&quot;提示：1.序列可以使用:range(1, num)得到2. 偶数通过计来判断,判断数字余2是否为0即可&quot;&quot;&quot;num=int(input(&quot;输入一个最大数，必须大于1&quot;))i=0for x in range(1,num):    if x%2==0:        i+=1print(f&quot;有&#123;i&#125;个偶数&quot;)#关于x的作用域问题，本来x的作用域应只在for循环内，但是在python中在域外也能访问到x，这是不符合规范的，#如果想用临时变量x，最好在for循环前面定义一个x就像x=0for x in range(5):    print(x)print(x)    </code></pre><h4 id="9-for循环的嵌套使用"><a href="#9-for循环的嵌套使用" class="headerlink" title="9.for循环的嵌套使用"></a>9.for循环的嵌套使用</h4><pre><code class="py"># 给蓝幽送玫瑰花，每天送10朵，并送一百天，最后表白成功i=0for i in range(1,101):    print(f&quot;今天是我的第&#123;i&#125;天表白，我喜欢你蓝幽&quot;)    for j in range(1,11):        print(f&quot;这是今天我送的第&#123;j&#125;朵玫瑰花&quot;)print(f&quot;今天是第&#123;i&#125;天，蓝幽答应我了&quot;)    </code></pre><h4 id="10-for循环嵌套九九乘法表"><a href="#10-for循环嵌套九九乘法表" class="headerlink" title="10.for循环嵌套九九乘法表"></a>10.for循环嵌套九九乘法表</h4><pre><code class="py"># 九九乘法表i=1for i in range(1,10):    j=1    for j in range(1,i+1):        print(f&quot;&#123;i&#125;*&#123;j&#125;=&#123;i*j&#125;\t&quot;,end=&quot;&quot;)        j+=1            i+=1    print()    </code></pre><h4 id="11-continue和break的使用"><a href="#11-continue和break的使用" class="headerlink" title="11.continue和break的使用"></a>11.continue和break的使用</h4><pre><code class="py">&quot;&quot;&quot;1.continue的作用是：中断所在循环的当次执行，直接进入下一次2.break的作用是：直接结束所在的循环3. 注意事项：continue和break，在for和while循环中作用一致在嵌套循环中，只能作用在所在的循环上，无法对上层循环&quot;&quot;&quot;for i in range(3):    print(&quot;qqqq&quot;)    for j in range(3):        print(&quot;www&quot;)  #会循环三次www        continue        print(&quot;eeeee&quot;)    print(&quot;rrrrr&quot;)     for i in range(3):    print(&quot;qqqq&quot;)    for j in range(3):        print(&quot;www&quot;) # 只会循环一次www        break        print(&quot;eeeee&quot;)    print(&quot;rrrrr&quot;)     </code></pre><h4 id="12-循环综合案例"><a href="#12-循环综合案例" class="headerlink" title="12.循环综合案例"></a>12.循环综合案例</h4><pre><code class="py"># 发工资&quot;&quot;&quot;某公司,账户余额有1W元,给20名员工发工资。园工编号从1到20 从编号1开始,依次领取工资,每人可领取1000元领工资时,财务判断员工的绩效分(1-10)（随机生成）,如果低于5,不发工资,换下一位如果工资发完了,结束发工资。&quot;&quot;&quot;&quot;&quot;&quot;提示：使用循环对员工依次发放工资continue用于跳过员工,break直接结束发工资随机数可以用：&quot;&quot;&quot;import randomb=10000i=1for i in range(20):    a=random.randint(1,10)    if a&lt;5:              print(f&quot;员工&#123;i&#125;,绩效分&#123;a&#125;,低于5,不发工资,下一位&quot;)        continue    elif b==0:        print(f&quot;员工&#123;i&#125;,余额为0,没有工资了&quot;)         break       else:        b-=1000        print(f&quot;员工&#123;i&#125;,绩效分&#123;a&#125;,向员工&#123;i&#125;发放工资1000元,账户余额还有&#123;b&#125;&quot;)            </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-while循环&quot;&gt;&lt;a href=&quot;#1-while循环&quot; class=&quot;headerlink&quot; title=&quot;1.while循环&quot;&gt;&lt;/a&gt;1.while循环&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;py&quot;&gt;i=0
while i&amp;lt;100:
   </summary>
      
    
    
    
    <category term="python" scheme="https://chi1314.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://chi1314.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-2</title>
    <link href="https://chi1314.github.io/2023/03/02/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-2/"/>
    <id>https://chi1314.github.io/2023/03/02/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-2/</id>
    <published>2023-03-02T13:24:20.000Z</published>
    <updated>2023-03-09T07:46:00.513Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-布尔类型和比较运算符"><a href="#1-布尔类型和比较运算符" class="headerlink" title="1.布尔类型和比较运算符"></a>1.布尔类型和比较运算符</h4><pre><code class="bash">bool1=Truebool2=Falseprint(f&quot;bool1变量内容为:&#123;bool1&#125;,类型为&#123;type(bool1)&#125;&quot;)print(f&quot;bool1变量内容为:&#123;bool2&#125;,类型为&#123;type(bool2)&#125;&quot;)# 比较运算符name=1name1=2print(name==name1)print(name&gt;name1)print(name&gt;=name1)print(name&lt;name1)print(name&lt;=name1)print(name!=name1)</code></pre><h4 id="2-if语句嵌套"><a href="#2-if语句嵌套" class="headerlink" title="2.if语句嵌套"></a>2.if语句嵌套</h4><pre><code class="bash"># if语句基本格式，注意冒号和print前面的四个空格age=20if age&gt;18:    print(&quot;我不错&quot;)# if else组合语句&quot;&quot;&quot;age1= int(input(&quot;请输入你的年龄&quot;))if age1&gt;18:    print(&quot;你需要10元买票&quot;)else:    print(&quot;可以免费&quot;)&quot;&quot;&quot;     # if elif else组合语句# 这样有一个缺点，就是必须三个变量都需要输入&quot;&quot;&quot;a=int(input(&quot;你的身高是(cm):&quot;))b=int(input(&quot;你的vip等级是(1-5):&quot;))c=int(input(&quot;今天是几号：&quot;))if a&lt;120:    print(&quot;免费&quot;)elif b&gt;3:    print(&quot;也免费&quot;) elif c==1:    print(&quot;1号免费&quot;)    else:    print(&quot;请付10元&quot;) # 改进，这样有符合要求的就可以直接停止if int(input(&quot;你的身高是(cm):&quot;))&lt;120:    print(&quot;免费&quot;)elif int(input(&quot;你的vip等级是(1-5):&quot;))&gt;3:    print(&quot;也免费&quot;) elif int(input(&quot;今天是几号：&quot;))==1:    print(&quot;1号免费&quot;)    else:    print(&quot;请付10元&quot;)&quot;&quot;&quot;    # if语句嵌套使用if int(input(&quot;你的身高是:&quot;))&gt;120:    print(&quot;你的vip等级是:&quot;)    if int(input())&gt;3:        print(&quot;可以进去了&quot;)    else:        print(&quot;等级不够&quot;)else:    print(&quot;小朋友，进去吧&quot;)            </code></pre><h4 id="3-if语句嵌套练习"><a href="#3-if语句嵌套练习" class="headerlink" title="3.if语句嵌套练习"></a>3.if语句嵌套练习</h4><pre><code class="bash"># 1.必须是大于等于18岁小于30岁的成年人# 2.同时入职时间需大于两年，或者级别大于三才可以领取age=int(input(&quot;你的年龄是多少：&quot;))if age&gt;=18:    if age&lt;30:        print(&quot;你符合年龄条件&quot;)        print(&quot;你入职几年了&quot;)        if int(input())&gt;=2:              print(&quot;来领取礼物吧&quot;)        elif int(input(&quot;你的vip等级是:&quot;))&gt;3:              print(&quot;你可以领取礼物&quot;)        else:            print(&quot;条件不够,并且等级不够&quot;)     else:        print(&quot;年龄不符&quot;)                 else:    print(&quot;年龄不够，不能领取礼物，但有红包欧&quot;) </code></pre><h4 id="4-jjjjj"><a href="#4-jjjjj" class="headerlink" title="4.jjjjj"></a>4.jjjjj</h4><pre><code class="bash"># 数字随机参生，范围1-10# 有三次机会猜数字，通过三层嵌套实现# 每次猜不中，会提示大了或者小了import randomnum=random.randint(1,10)a=numnum1=int(input(&quot;猜猜我是几(1-10):&quot;))if num1==a:    print(&quot;猜对了&quot;)   elif num1&gt;a:        print(&quot;猜大了&quot;)        print(&quot;再猜一次吧&quot;)        num2=int(input(&quot;猜猜我是几(1-10):&quot;))        if num2==a:            print(&quot;猜对了&quot;)        elif num2&gt;a:            print(&quot;猜大了&quot;)            print(&quot;再猜一次吧&quot;)            num3=int(input(&quot;猜猜我是几(1-10):&quot;))             print()              if num3==a:                print(&quot;猜对了&quot;)            elif num3&gt;a:                print(&quot;猜大了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)             elif num3&lt;a:                print(&quot;猜小了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)        elif num2&lt;a:            print(&quot;猜小了&quot;)            print(&quot;再猜一次吧&quot;)            num3=int(input(&quot;猜猜我是几(1-10):&quot;))            if num3==a:                print(&quot;猜对了&quot;)            elif num3&gt;a:                print(&quot;猜大了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)                 elif num3&lt;a:                print(&quot;猜小了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)                   elif num1&lt;a:        print(&quot;猜小了&quot;)        print(&quot;再猜一次吧&quot;)        num2=int(input(&quot;猜猜我是几(1-10):&quot;))        if num2==a:            print(&quot;猜对了&quot;)        elif num2&gt;a:            print(&quot;猜大了&quot;)            print(&quot;再猜一次吧&quot;)            num3=int(input(&quot;猜猜我是几(1-10):&quot;))            if num3==a:                print(&quot;猜对了&quot;)            elif num3&gt;a:                print(&quot;猜大了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)                 elif num3&lt;a:                print(&quot;猜小了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)        elif num2&lt;a:            print(&quot;猜小了&quot;)            print(&quot;再猜一次吧&quot;)            num3=int(input(&quot;猜猜我是几(1-10):&quot;))            if num3==a:                print(&quot;猜对了&quot;)            elif num3&gt;a:                print(&quot;猜大了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)                 elif num3&lt;a:                print(&quot;猜小了&quot;)                print(&quot;没有机会了欧，答案是:&quot;,a)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-布尔类型和比较运算符&quot;&gt;&lt;a href=&quot;#1-布尔类型和比较运算符&quot; class=&quot;headerlink&quot; title=&quot;1.布尔类型和比较运算符&quot;&gt;&lt;/a&gt;1.布尔类型和比较运算符&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;
bool1=Tr</summary>
      
    
    
    
    <category term="python" scheme="https://chi1314.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://chi1314.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python学习日记Ⅰ-1</title>
    <link href="https://chi1314.github.io/2023/02/25/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-1/"/>
    <id>https://chi1314.github.io/2023/02/25/python%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%E2%85%A0-1/</id>
    <published>2023-02-25T08:03:12.000Z</published>
    <updated>2023-03-09T07:45:50.362Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-type使用"><a href="#1-type使用" class="headerlink" title="1.type使用"></a>1.type使用</h4><pre><code class="bash"># 直接调用typeprint(type(&quot;蓝幽呀&quot;))print(type(11))print(type(1.23))# 变量调用typea=&quot;蓝幽呀&quot;print(type(a))# 变量调用并输出数据b=1314print(type(b),b)</code></pre><h4 id="2-数据类型的转换"><a href="#2-数据类型的转换" class="headerlink" title="2.数据类型的转换"></a>2.数据类型的转换</h4><pre><code class="bash"># 将数字类型转换成字符串,所有类型都可转字符串num=str(11)print(type(num))num1=str(1.123)print(type(num1))# 将字符串转为数字，引号里面是数字才能转num2=int(&quot;23&quot;)print(type(num2),num2)# 整数转浮点数num3=float(11)print(type(num3),num3)# 浮点转整数,会丢失精度num4=int(12.23)print(type(num4),num4)</code></pre><h4 id="3-标识符"><a href="#3-标识符" class="headerlink" title="3.标识符"></a>3.标识符</h4><pre><code class="bash"># 规则1：内容限定只能使用中、英、数字、下划线，注意：不能以数字开头# 错误实例 1_name=&quot;11&quot; name_!=12name=11name_1=12_name=23# 规则2:大小写敏感a=3A=4print(a)print(A)# 规则3:不可使用关键字class、true</code></pre><h4 id="4-运算符"><a href="#4-运算符" class="headerlink" title="4.运算符"></a>4.运算符</h4><pre><code class="bash">print(&quot;1+2=&quot;,1+2)print(&quot;2-1=&quot;,2-1)print(&quot;2*5=&quot;,2*5)print(&quot;5/2=&quot;,5/2)print(&quot;1%2=&quot;,1%2)print(&quot;11//3=&quot;,11//3)#整除print(&quot;2**5=&quot;,2**5)# 复合运算符num=2num +=3print(num)num-=2print(num)num*=2print(num)num/+2print(num)</code></pre><h4 id="5-字符串的三种定义方式"><a href="#5-字符串的三种定义方式" class="headerlink" title="5.字符串的三种定义方式"></a>5.字符串的三种定义方式</h4><pre><code class="bash">name=&#39;11&#39;name=&quot;11&quot;name=&quot;&quot;&quot;11&quot;&quot;&quot;#这个和注释符一样。但因为有变量定义，所以变为字符串，可以识别，如果没有变量则为注释#多重使用也是可以的name=&quot;&#39;11&#39;&quot;#双包单name=&#39;&quot;11&quot;&#39;#单包双#双包双，需要\,单包单同理name=&quot;\&quot;11\&quot;&quot;</code></pre><h4 id="6-字符串的拼接"><a href="#6-字符串的拼接" class="headerlink" title="6.字符串的拼接"></a>6.字符串的拼接</h4><pre><code class="bash"># 1.注意，字符串拼接只能是str类型，不能与数字进行拼接name=&quot;蓝幽&quot;all=&quot;www&quot;print(&quot;我是：&quot;+name)# 2.万能拼接法，格式化,这里使用%s占位，如何利用%接上，%的作用是将后面的类型都转换为字符串类型进行拼接name1=&quot;lanyou&quot;tel=34456print(&quot;我是：%s,我的id是:%s&quot;%(name1,tel))# %s：转换成字符串类型 %d：转换成整修型 %f：转换成浮点型all=1.23print(&quot;我是：%s,我的id是:%d,我的all是:%f&quot;%(name1,tel,all))# 3.快速格式化拼接，特点：不限数据类型，不做精度控制name=&quot;lanyouya&quot;id=2345num=12.23print(f&quot;我的名字是&#123;name&#125;,我的id是&#123;id&#125;,我的num是:&#123;num&#125;&quot;)</code></pre><h4 id="7-精度控制"><a href="#7-精度控制" class="headerlink" title="7.精度控制"></a>7.精度控制</h4><pre><code class="bash">num=11num1=11.54num2=12.678# %5.3f指的是占5位字节，保留3位小数，小数点也为一位print(&quot;数字11的精度%5d&quot;%num)#结果为：空格空格空格11print(&quot;数字11.54的精度%5.2f&quot;%num1)print(&quot;数字12.6678的精度%5.2f&quot;%num2)#四舍五入</code></pre><h4 id="8-input语句"><a href="#8-input语句" class="headerlink" title="8.input语句"></a>8.input语句</h4><pre><code class="bash">&quot;&quot;&quot;print(&quot;你是谁&quot;)name=input()print(&quot;我是：%s&quot;%name)&quot;&quot;&quot;#更简单的方式name=input(&quot;你是谁&quot;)print(f&quot;你是&#123;name&#125;&quot;)#上面的input输入的类型统一为str，如果要转换类型则tal=input(&quot;你的id是&quot;)print(f&quot;我的id是&#123;int(tal)&#125;&quot;,f&quot;类型为：&#123;type(int(tal))&#125;&quot;)&quot;&quot;&quot;你是谁lanyou你是lanyou你的id是123我的id是123 类型为：&lt;class &#39;int&#39;&gt;&quot;&quot;&quot;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-type使用&quot;&gt;&lt;a href=&quot;#1-type使用&quot; class=&quot;headerlink&quot; title=&quot;1.type使用&quot;&gt;&lt;/a&gt;1.type使用&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;# 直接调用type
print(type(&amp;qu</summary>
      
    
    
    
    <category term="python" scheme="https://chi1314.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://chi1314.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>好用的翻墙软件-pigcha</title>
    <link href="https://chi1314.github.io/2023/01/18/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BF%BB%E5%A2%99%E8%BD%AF%E4%BB%B6-pigcha/"/>
    <id>https://chi1314.github.io/2023/01/18/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BF%BB%E5%A2%99%E8%BD%AF%E4%BB%B6-pigcha/</id>
    <published>2023-01-17T19:57:07.000Z</published>
    <updated>2023-02-22T10:27:43.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h2><p>一直想在电脑用Google搜索引擎，找了许多软件，最后还是这款用的最舒服，最稳定方便可直接到pigcha官网下载，里面有多版本，手机电脑苹果安卓都可用，这是<a href="https://pigpigchacha.github.io/officialsite">官网地址</a>。<br><br><br><br><img src="/images/pigcha.jpg" alt="2023-2" style="zoom:100%;" /></p><h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h2><p>安装软件后，使用邮箱注册一下，我用的qq邮箱，注册完成后出现如下界面<br><img src="/images/pigcha2.jpg" alt="2023-2" style="zoom:40%;" /><br>下面的代理服务器用默认的就可以了，当然也可以自己选择，然后点击加速按钮就可以使用了，是不是特别方便😃<br><br><br><br></p>]]></content>
    
    
    <summary type="html">Google用不了？github打不开？这个软件将帮你解决-翻墙精品pigcha</summary>
    
    
    
    <category term="工具" scheme="https://chi1314.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具 软件" scheme="https://chi1314.github.io/tags/%E5%B7%A5%E5%85%B7-%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>如何给自己的主题加上音频</title>
    <link href="https://chi1314.github.io/2023/01/14/%E5%A6%82%E4%BD%95%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A2%98%E5%8A%A0%E4%B8%8A%E9%9F%B3%E9%A2%91/"/>
    <id>https://chi1314.github.io/2023/01/14/%E5%A6%82%E4%BD%95%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%BB%E9%A2%98%E5%8A%A0%E4%B8%8A%E9%9F%B3%E9%A2%91/</id>
    <published>2023-01-13T17:12:06.000Z</published>
    <updated>2023-02-13T01:25:55.314Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主要文档"><a href="#主要文档" class="headerlink" title="主要文档"></a>主要文档</h1><p>添加音频使用hexo-tag-aplayer插件，可查看官方<a href="https://aplayer.js.org/#/zh-Hans/">中文文档</a><br>按照步骤进行<br>如果没有安装npm，可查看链接<a href="https://blog.csdn.net/Cleve_baby/article/details/125632341">https://blog.csdn.net/Cleve_baby/article/details/125632341</a> 进行安装</p><h1 id="1-使用npm"><a href="#1-使用npm" class="headerlink" title="1.使用npm"></a>1.使用npm</h1><p>在终端输入</p><pre><code class="bash">npm install aplayer</code></pre><p>如果安装失败，就手动安装</p><pre><code class="bash">sudo npm install aplayer</code></pre><h1 id="2-安装yarn"><a href="#2-安装yarn" class="headerlink" title="2.安装yarn"></a>2.安装yarn</h1><pre><code class="bash"> npm install -g yarn</code></pre><p>安装完成后执行</p><pre><code class="bash"> yarn add aplayer</code></pre><p>到这里插件安装就完成了</p><h1 id="3-添加代码到body里面"><a href="#3-添加代码到body里面" class="headerlink" title="3.添加代码到body里面"></a>3.添加代码到body里面</h1><h4 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h4><pre><code class="bash">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.0/dist/APlayer.min.css&quot;&gt;&lt;div id=&quot;aplayer&quot;&gt;&lt;/div&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.0/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</code></pre><h4 id="js代码-播放器"><a href="#js代码-播放器" class="headerlink" title="js代码-播放器"></a>js代码-播放器</h4><p>这个需要先创建一个1.js文件，直接加入代码的话可能会失效</p><pre><code class="bash"> const ap = new APlayer(&#123;    container: document.getElementById(&#39;aplayer&#39;),    audio: [&#123;        name: &#39;name&#39;,        artist: &#39;artist&#39;,        url: &#39;url.mp3&#39;,        cover: &#39;cover.jpg&#39;    &#125;]&#125;);</code></pre><p>采用外链的形式添加到html里面</p><pre><code class="bash">&lt;script src=&quot;1.js&quot;&gt;&lt;/script&gt;</code></pre><h4 id="js代码-模块管理器"><a href="#js代码-模块管理器" class="headerlink" title="js代码-模块管理器"></a>js代码-模块管理器</h4><p>建一个2.js文件，添加以下代码</p><pre><code class="bash">import &#39;APlayer/dist/APlayer.min.css&#39;;import APlayer from &#39;APlayer&#39;;const ap = new APlayer(options);</code></pre><p>同上加到html里面</p><pre><code class="bash"> &lt;script src=&quot;2.js&quot;&gt;&lt;/script&gt;</code></pre><p>到这里就可以看见播放器出现在页面了<br><img src="/images/2023-1.16播放器.jpg" alt="2023-2" style="zoom:140%;" /><br>样式可以调成自己喜欢的，或者加入多首歌都可查看官方<a href="https://aplayer.js.org/#/zh-Hans/">中文文档</a></p><h3 id="无奈的地方"><a href="#无奈的地方" class="headerlink" title="无奈的地方"></a>无奈的地方</h3><p> 这个音频加入后可以正常播放，但是在网站内切换页面的时候会中断，音乐体验感大打折扣，折腾了七八个小时，看了大量资料，都是使用pjax来解决这个问题<br> 然后我的主题不支持pjax，只有next主题和少部分butterfly可以使用pjax，我还得多学习一下pjax，早日给俺滴主题加上pjax🥹<br>要是有大佬能解决这个问题，尽管踢我，十分谢🙏🏻</p><p><br><br><br></p>]]></content>
    
    
    <summary type="html">aplayer插件还是好用又好看的</summary>
    
    
    
    <category term="主题发展" scheme="https://chi1314.github.io/categories/%E4%B8%BB%E9%A2%98%E5%8F%91%E5%B1%95/"/>
    
    
    <category term="hexo" scheme="https://chi1314.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>2022年终总结</title>
    <link href="https://chi1314.github.io/2023/01/01/2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://chi1314.github.io/2023/01/01/2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2023-01-01T08:23:28.000Z</published>
    <updated>2023-02-13T01:25:34.050Z</updated>
    
    <content type="html"><![CDATA[<p>总结归来–尽是惭愧</p><h1 id="💰贷款"><a href="#💰贷款" class="headerlink" title="💰贷款"></a>💰贷款</h1><p>2月16日：给远在海南的二姐贷款，自从二姐离婚了就一直一个人在海南生活，二姐学历不高，很难找到工作，所以选择了自主创业，创业不容易，非常需要钱，我也是支持我姐的，也是尽一点绵薄之力…..</p><h1 id="🏁竞赛"><a href="#🏁竞赛" class="headerlink" title="🏁竞赛"></a>🏁竞赛</h1><p>5月31号：院级的网页制作大赛，写一个关于防疫宣传的网页，拿了一个三等奖(没什么作用，只是当作练手的项目)，太久没有学习web，小白再重新温习一遍🤭</p><h1 id="🤕病痛"><a href="#🤕病痛" class="headerlink" title="🤕病痛"></a>🤕病痛</h1><p>8月21号：因为暑假帮家里干农活而感染了疥疮，起初一直以为是湿疹，就在药店买着廉价药膏缓解病痛，8月27号回到学校，9月4号疫情封校，我发觉病痛没有一点好转，还以为是自己没有正确使用药膏，就继续忍受着夜不能寐的生活，10月1号学校解封了，我是被这个病给整服了，终于还是去了医院，花了五百块，心疼🥹，给本不富裕的生活雪上加霜，10月8号，病终于好了，可以好好睡觉了☺️</p><img src="/images/2023-1.jpeg" alt="2023-1" style="zoom:50%;" /><h1 id="韭菜"><a href="#韭菜" class="headerlink" title="韭菜"></a>韭菜</h1><p>10月10号：我发现我自己以前在教育机构买的web课程看不了了，我才学完前面一点皮毛，才入门不久，后面联系客服才知道机构要倒闭了，要维权费用更高，我就是个大韭菜啊啊啊啊啊啊！😫</p><h1 id="兼职"><a href="#兼职" class="headerlink" title="兼职"></a>兼职</h1><p>11月14号：因为不向家里要生活费，加上手机屏幕摔碎了两百，电脑屏幕坏了一千块，生活再节俭也不够了，就在学校食堂的烧烤店兼职了，兼职也没有想象的有多累，反而觉得还挺有趣的，但是做了10天之后，学校期末考试提前，时间比较紧迫，让我想辞掉兼职了，老板跟我说必须找一个人代替我才能走，让我很是为难，老板儿子人还挺好的，挺舍不得我的，跟他相处的还是很开心的，，我就继续留在这了，再做几天找个人代替我，到12月1号终于找到人了，我也顺利辞掉兼职了…,有了工资生活也宽松了许多🥳，虽然过得非常节俭，但是生活还是很幸福…</p><h1 id="全国疫情防控解除"><a href="#全国疫情防控解除" class="headerlink" title="全国疫情防控解除"></a>全国疫情防控解除</h1><h3 id="蓝幽の小屋的开始"><a href="#蓝幽の小屋的开始" class="headerlink" title="蓝幽の小屋的开始"></a>蓝幽の小屋的开始</h3><p>12月7号：这一天终于来了，封了半个多学期的校，终于过去了，12月9号把科目三考过了，真舒服。寒假也提前到了12月16号，现在回到家，打开收藏了很久的<a href="https://diygod.me/">DIYgod</a>的网站，从他的友链中看到其他的人的网站后，我才发觉个人网站原来这么有趣，我也就开始从网上学习如何建立网站的了，终于到12月25号我的网站上线啦，这也是我这一年最开心的事了🥰</p><h1 id="🎮游戏"><a href="#🎮游戏" class="headerlink" title="🎮游戏"></a>🎮游戏</h1><p>2022年只玩了手机游戏</p><p>《王者荣耀》：玩玩停停，每次玩都会玩好久，段位高了，水平就不够了，感觉就是游戏在玩我了，结果就是被我卸掉😛，下个赛季末在玩😗</p><p>《QQ飞车》：同样是玩玩停停，就是在带段位低的人上分一起玩开心，但人太少了，<s>一个人玩还是有点孤独</s></p><p>《明日方舟》：最佳，玩了一整年，今年加了两个同学和我一起玩，会讨论攻略，给我带来了很多乐趣，游戏可玩性的内容有点少，大部分时间还是在手机里养老🤣</p><h1 id="🎞影视"><a href="#🎞影视" class="headerlink" title="🎞影视"></a>🎞影视</h1><p>番剧：</p><p>2022年好看的番有点少啊</p><p>《欢迎来到实力主义至上的教室》：最佳</p><p>《凡人修仙传》：最佳</p><p>《电锯人》</p><p>《想要成为影之实力者》</p><p>《夏日重现》</p><p>《蓝色监狱》</p><p>《龙族》</p><p>《斗破苍穹·三年之约》</p><p>《异世界舅舅》</p><p>《杜鹃的婚约》</p><p>《派对浪客诸葛孔明》</p><p>《进击的巨人 最终季part.2》</p><p>剧场版：</p><p>《紫罗兰永恒花园剧场版》</p><p>补番剧场版：</p><p>《我想吃掉你的胰脏》</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这一年还真是不幸的一年，这些都是选择因果的产物，回归溯源，为什么会：兼职←诈骗←机构买课←想为了未来学习技术←大学无忧无虑的生活，对未来的担忧。今年做错了很多选择，很惭愧，发生这些事后感觉清醒了很多，之前的我实在是愚笨了，这一年做的有意义的事情还是太少了，游戏虽然带给了我很多乐趣，但同时也消耗掉过多时间，web的技术还在小白阶段，就让2022年的教训成为我2023的成长养料吧！</p><p>不过这一年有一件事是值得我开心的，就是我上线了我的个人网站🤠</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>2023年目标：「让自己变得充实有趣起来」，呐</p><img src="/images/2023-2.jpg" alt="2023-2" style="zoom:100%;" /><br><br><br>]]></content>
    
    
    <summary type="html">☀︎新的一年从这里开始☀︎</summary>
    
    
    
    <category term="日记本" scheme="https://chi1314.github.io/categories/%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
    <category term="生活" scheme="https://chi1314.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="经历" scheme="https://chi1314.github.io/tags/%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="https://chi1314.github.io/2022/12/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blogs%E6%96%87%E7%AB%A0/"/>
    <id>https://chi1314.github.io/2022/12/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blogs%E6%96%87%E7%AB%A0/</id>
    <published>2022-12-27T08:25:14.000Z</published>
    <updated>2023-03-03T05:36:53.244Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><p>依次有六级，看有多少个”#”</p><hr><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><hr><h4 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h4><p><em>我是斜体</em></p><p><strong>我是粗体</strong></p><p><em>我也是斜体</em></p><p><strong>我也粗体</strong></p><p><em><strong>我又斜又粗</strong></em></p><p><em><strong>我也又斜又粗</strong></em></p><hr><h4 id="删除符"><a href="#删除符" class="headerlink" title="删除符"></a>删除符</h4><p><del>我被删除了</del></p><hr><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><p><a href="https://lanyou.me/">蓝幽呀</a></p><p><a href="https://lanyou.me/">https://lanyou.me</a></p><hr><h4 id="图片引用"><a href="#图片引用" class="headerlink" title="图片引用"></a>图片引用</h4><p><img src="/images/2023-2.jpg"></p><img src="/images/2023-2.jpg" style="zoom:20%;"><p><strong>带有链接的图片</strong></p><p><a href="https://lanyou.me/"><img src="/images/2023-2.jpg"></a></p><p>感觉还是用a嵌套img方便</p><hr><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p><strong>“+,-,*”加[空格]加[内容]</strong></p><ul><li>第一次</li><li>第二次</li><li>第三次</li></ul><hr><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p><strong>使用 <code>1.</code> +<code>空格</code> +<code>文字内容</code> 表示有序列表，按tab可嵌套。</strong></p><ol><li><p>第一次</p></li><li><p>第二次</p><ol><li><p>第三次</p></li><li><p>第四次</p></li></ol></li></ol><hr><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p><code> print(&quot;蓝幽&quot;)</code>  <strong>单行代码块</strong></p><p>**多行显示，后面的python指语言高亮提示</p><pre><code class="python">print(&quot;lanyou&quot;)​    Print(&quot;I&quot;)​    Print(&quot;like&quot;)</code></pre><hr><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p><strong>第一个部分是表格的标题，使用|来作为列的分割<br>第二个部分是表示列的对齐方式，有左对齐、居中对齐和居右对齐三种类型，直接看例子吧， — 表示了默认的左对齐， :— 表示 左对齐 ， —: 表示 右对齐 ， :—: 表示居中对齐<br>第三个部分就是内容了，表示方式跟标题一样，可以有多行</strong></p><table><thead><tr><th align="left">—</th><th align="center">—–:</th><th align="right">:—–:</th></tr></thead><tbody><tr><td align="left">一级</td><td align="center">二级居中</td><td align="right">三级居右</td></tr></tbody></table><p>这个上手还是需要时间呀</p><hr><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p>麻了，有需要再网上搜语法来用吧</p><h4 id="代码隐藏，可点击展开显示"><a href="#代码隐藏，可点击展开显示" class="headerlink" title="代码隐藏，可点击展开显示"></a>代码隐藏，可点击展开显示</h4><pre><code class="html">&lt;details&gt; &lt;summary &gt;展开查看&lt;/summary&gt; 代码块&lt;/details&gt;  </code></pre><details> <summary >展开查看</summary> <pre><code class="bash"> &lt;% if (theme.twikoo.enable &amp;&amp; page.comments==true) &#123; %&gt;    &lt;div id=&quot;comments&quot;&gt;        &lt;div id=&quot;twikoo-container&quot;&gt;&lt;/div&gt;    &lt;/div&gt;       &lt;% &#125; %&gt;</code></pre><p> .md文章里设置 </p><pre><code class="bash">title: aboutdate: 2022-12-31 22:04:53type: &quot;about&quot;comments: false</code></pre></details><h4 id="实线"><a href="#实线" class="headerlink" title="实线"></a>实线</h4><hr style="border:1px solid black;">   ]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a href=&quot;#这是一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一级标题&quot;&gt;&lt;/a&gt;这是一级标题&lt;/h1&gt;&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a href=&quot;#这是二级标题&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="日记本" scheme="https://chi1314.github.io/categories/%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
    <category term="记录" scheme="https://chi1314.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://chi1314.github.io/2022/12/27/hello-world/"/>
    <id>https://chi1314.github.io/2022/12/27/hello-world/</id>
    <published>2022-12-27T08:15:11.585Z</published>
    <updated>2023-01-23T01:02:48.813Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a><br><br><br><br><br><i class="fa fa-eye fa-fw" style="margin-left:0px;"></i>被看过:&nbsp;&nbsp;<span id="busuanzi_value_page_pv" style="color: #03a9f4;"></span>次 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="主题发展" scheme="https://chi1314.github.io/categories/%E4%B8%BB%E9%A2%98%E5%8F%91%E5%B1%95/"/>
    
    
    <category term="hexo" scheme="https://chi1314.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
